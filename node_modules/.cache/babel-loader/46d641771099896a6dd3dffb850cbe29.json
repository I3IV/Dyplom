{"ast":null,"code":"import cities from \"./mock-cities\";\nimport countries from \"./mock-countries\";\nimport cuisines from \"./mock-cuisines\";\nimport dishes from \"./mock-dishes\";\nimport dishCategories from \"./mock-dish-categories\";\nimport dishSizes from \"./mock-dish-sizes\";\nimport restaurants from \"./mock-restaurants\";\nimport seats from \"./mock-seats\";\nimport products from \"./mock-products\";\nimport addresses from \"./mock-addresses\";\nimport { getCustomerAddressesSelect, getCitiesSelect, getRestaurantsSelect, getCategoriesSelect, getDishesSelect } from \"./selects\";\nimport { getAllDishes, getDishesByRestId, getDish, getDishesByDishCategoryId, getCategoriesByMenuId, getDishCategoriesByRestId } from \"./dishes\";\nimport { getEventsNumber, getEvents, createEvent, deleteEvent, createScheduleItem, createDishesInScheduleItem, getScheduleItemsByCustId } from \"./schedule-items\";\nimport { getCustomerDeliveryAddresses, createDeliveryAddresses, getCity, getAllCities, getCitiesByCountryId, getAllCountries } from \"./addresses\";\nimport { getAllRestaurants, getRestaurant } from \"./restaurants\";\nimport { getLoggedInUser, updateUser } from \"./customer\";\nexport { getCustomerAddressesSelect, getCitiesSelect, getRestaurantsSelect, getCategoriesSelect, getDishesSelect, getAllDishes, getDishesByRestId, getDish, getDishesByDishCategoryId, getCategoriesByMenuId, getDishCategoriesByRestId, getEventsNumber, getEvents, createEvent, deleteEvent, createScheduleItem, createDishesInScheduleItem, getScheduleItemsByCustId, getAllRestaurants, getRestaurant, getCustomerDeliveryAddresses, createDeliveryAddresses, getCity, getAllCities, getCitiesByCountryId, getAllCountries, getLoggedInUser, updateUser }; // DUMMY DATA -------------------------------------------\n\nvar itemsSelect = function itemsSelect(items) {\n  return items.map(function (item) {\n    return {\n      value: item.label,\n      label: item.label\n    };\n  });\n};\n\nexport { dishes, restaurants };\n\nvar getItemsByParentId = function getItemsByParentId(item_id, arr) {\n  var propName = Object.keys(item_id)[0];\n  var itemId = item_id[propName];\n  if (!itemId) return [];\n  return arr.filter(function (item) {\n    if (Array.isArray(item[propName])) {\n      return item[propName].includes(itemId);\n    } else return item[propName].toString() === itemId.toString();\n  });\n};\n\nvar getSelectItemsByParentId = function getSelectItemsByParentId(item_id, arr) {\n  return getItemsByParentId(item_id, arr).map(function (item) {\n    return {\n      value: item.id,\n      label: item.name\n    };\n  });\n};\n\nvar getItemNameById = function getItemNameById(item_id, arr) {\n  var idx = arr.findIndex(function (item) {\n    return item.id === item_id;\n  });\n  return idx !== -1 ? arr[idx].name : \"\";\n};\n\nvar getItemById = function getItemById(item_id, arr) {\n  var idx = arr.findIndex(function (item) {\n    return item.id.toString() === item_id.toString();\n  });\n  return idx !== -1 ? arr[idx] : \"\";\n};\n\nexport var citiesSelectItems = itemsSelect(cities);\nexport var countriesSelectItems = itemsSelect(countries);\nexport var cuisinesSelectItems = itemsSelect(cuisines);\nexport var seatsSelectItems = seats.map(function (item, index) {\n  return {\n    value: index + 1,\n    label: item.label\n  };\n});\nexport var restaurantsSelectItems = restaurants.map(function (rest) {\n  return {\n    value: rest.id,\n    label: rest.name\n  };\n});\nexport var addressesSelectItems = addresses.map(function (addr) {\n  return {\n    value: addr.id,\n    label: addr.name\n  };\n});\nexport var dishCategoriesSelectItems = function dishCategoriesSelectItems(restaurant_id) {\n  return getSelectItemsByParentId({\n    restaurant_id: restaurant_id\n  }, dishCategories);\n};\nexport var dishesSelectItems = function dishesSelectItems(category_id) {\n  return getSelectItemsByParentId({\n    category_id: category_id\n  }, dishes);\n};\nexport var productsSelectItems = function productsSelectItems(dish_id) {\n  return getSelectItemsByParentId({\n    dish_id: dish_id\n  }, products);\n};\nexport var dishSizesSelectItems = function dishSizesSelectItems(dish_id) {\n  var idx = dishes.findIndex(function (item) {\n    return item.id === dish_id;\n  });\n  var sizes = dishes[idx].size_id;\n  return dishSizes.filter(function (item) {\n    return sizes.includes(item.id);\n  });\n};\nexport var restaurantIdToName = function restaurantIdToName(id) {\n  return getItemNameById(id, restaurants);\n};\nexport var dishCategoryIdToName = function dishCategoryIdToName(id) {\n  return getItemNameById(id, dishCategories);\n};\nexport var dishIdToName = function dishIdToName(id) {\n  return getItemNameById(id, dishes);\n};\nexport var getRestaurantById = function getRestaurantById(id) {\n  return getItemById(id, restaurants);\n};\nexport var getDishesByCategoryId = function getDishesByCategoryId(category_id) {\n  return getItemsByParentId({\n    category_id: category_id\n  }, dishes);\n};","map":{"version":3,"sources":["H:\\I3IV\\Dyplom\\src\\node_modules\\api\\index.js"],"names":["cities","countries","cuisines","dishes","dishCategories","dishSizes","restaurants","seats","products","addresses","getCustomerAddressesSelect","getCitiesSelect","getRestaurantsSelect","getCategoriesSelect","getDishesSelect","getAllDishes","getDishesByRestId","getDish","getDishesByDishCategoryId","getCategoriesByMenuId","getDishCategoriesByRestId","getEventsNumber","getEvents","createEvent","deleteEvent","createScheduleItem","createDishesInScheduleItem","getScheduleItemsByCustId","getCustomerDeliveryAddresses","createDeliveryAddresses","getCity","getAllCities","getCitiesByCountryId","getAllCountries","getAllRestaurants","getRestaurant","getLoggedInUser","updateUser","itemsSelect","items","map","item","value","label","getItemsByParentId","item_id","arr","propName","Object","keys","itemId","filter","Array","isArray","includes","toString","getSelectItemsByParentId","id","name","getItemNameById","idx","findIndex","getItemById","citiesSelectItems","countriesSelectItems","cuisinesSelectItems","seatsSelectItems","index","restaurantsSelectItems","rest","addressesSelectItems","addr","dishCategoriesSelectItems","restaurant_id","dishesSelectItems","category_id","productsSelectItems","dish_id","dishSizesSelectItems","sizes","size_id","restaurantIdToName","dishCategoryIdToName","dishIdToName","getRestaurantById","getDishesByCategoryId"],"mappings":"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","sourcesContent":["import cities from \"./mock-cities\";\r\nimport countries from \"./mock-countries\";\r\nimport cuisines from \"./mock-cuisines\";\r\nimport dishes from \"./mock-dishes\";\r\nimport dishCategories from \"./mock-dish-categories\";\r\nimport dishSizes from \"./mock-dish-sizes\";\r\nimport restaurants from \"./mock-restaurants\";\r\nimport seats from \"./mock-seats\";\r\nimport products from \"./mock-products\";\r\nimport addresses from \"./mock-addresses\";\r\n\r\nimport {\r\n  getCustomerAddressesSelect,\r\n  getCitiesSelect,\r\n  getRestaurantsSelect,\r\n  getCategoriesSelect,\r\n  getDishesSelect\r\n} from \"./selects\";\r\n\r\nimport {\r\n  getAllDishes,\r\n  getDishesByRestId,\r\n  getDish,\r\n  getDishesByDishCategoryId,\r\n  getCategoriesByMenuId,\r\n  getDishCategoriesByRestId\r\n} from \"./dishes\";\r\n\r\nimport {\r\n  getEventsNumber,\r\n  getEvents,\r\n  createEvent,\r\n  deleteEvent,\r\n  createScheduleItem,\r\n  createDishesInScheduleItem,\r\n  getScheduleItemsByCustId\r\n} from \"./schedule-items\";\r\n\r\nimport {\r\n  getCustomerDeliveryAddresses,\r\n  createDeliveryAddresses,\r\n  getCity,\r\n  getAllCities,\r\n  getCitiesByCountryId,\r\n  getAllCountries\r\n} from \"./addresses\";\r\n\r\nimport { getAllRestaurants, getRestaurant } from \"./restaurants\";\r\n\r\nimport { getLoggedInUser, updateUser } from \"./customer\";\r\n\r\nexport {\r\n  getCustomerAddressesSelect,\r\n  getCitiesSelect,\r\n  getRestaurantsSelect,\r\n  getCategoriesSelect,\r\n  getDishesSelect,\r\n  getAllDishes,\r\n  getDishesByRestId,\r\n  getDish,\r\n  getDishesByDishCategoryId,\r\n  getCategoriesByMenuId,\r\n  getDishCategoriesByRestId,\r\n  getEventsNumber,\r\n  getEvents,\r\n  createEvent,\r\n  deleteEvent,\r\n  createScheduleItem,\r\n  createDishesInScheduleItem,\r\n  getScheduleItemsByCustId,\r\n  getAllRestaurants,\r\n  getRestaurant,\r\n  getCustomerDeliveryAddresses,\r\n  createDeliveryAddresses,\r\n  getCity,\r\n  getAllCities,\r\n  getCitiesByCountryId,\r\n  getAllCountries,\r\n  getLoggedInUser,\r\n  updateUser\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// DUMMY DATA -------------------------------------------\r\nconst itemsSelect = items => {\r\n  return items.map(item => ({\r\n    value: item.label,\r\n    label: item.label\r\n  }));\r\n};\r\n\r\nexport { dishes, restaurants };\r\nconst getItemsByParentId = (item_id, arr) => {\r\n  const propName = Object.keys(item_id)[0];\r\n  const itemId = item_id[propName];\r\n  if (!itemId) return [];\r\n  return arr.filter(item => {\r\n    if (Array.isArray(item[propName])) {\r\n      return item[propName].includes(itemId);\r\n    } else return item[propName].toString() === itemId.toString();\r\n  });\r\n};\r\nconst getSelectItemsByParentId = (item_id, arr) =>\r\n  getItemsByParentId(item_id, arr).map(item => ({\r\n    value: item.id,\r\n    label: item.name\r\n  }));\r\n\r\nconst getItemNameById = (item_id, arr) => {\r\n  const idx = arr.findIndex(item => item.id === item_id);\r\n  return idx !== -1 ? arr[idx].name : \"\";\r\n};\r\nconst getItemById = (item_id, arr) => {\r\n  const idx = arr.findIndex(item => item.id.toString() === item_id.toString());\r\n  return idx !== -1 ? arr[idx] : \"\";\r\n};\r\n\r\nexport const citiesSelectItems = itemsSelect(cities);\r\nexport const countriesSelectItems = itemsSelect(countries);\r\nexport const cuisinesSelectItems = itemsSelect(cuisines);\r\nexport const seatsSelectItems = seats.map((item, index) => ({\r\n  value: index + 1,\r\n  label: item.label\r\n}));\r\nexport const restaurantsSelectItems = restaurants.map(rest => ({\r\n  value: rest.id,\r\n  label: rest.name\r\n}));\r\nexport const addressesSelectItems = addresses.map(addr => ({\r\n  value: addr.id,\r\n  label: addr.name\r\n}));\r\nexport const dishCategoriesSelectItems = restaurant_id =>\r\n  getSelectItemsByParentId({ restaurant_id }, dishCategories);\r\n\r\nexport const dishesSelectItems = category_id =>\r\n  getSelectItemsByParentId({ category_id }, dishes);\r\n\r\nexport const productsSelectItems = dish_id =>\r\n  getSelectItemsByParentId({ dish_id }, products);\r\n\r\nexport const dishSizesSelectItems = dish_id => {\r\n  const idx = dishes.findIndex(item => item.id === dish_id);\r\n  const sizes = dishes[idx].size_id;\r\n  return dishSizes.filter(item => sizes.includes(item.id));\r\n};\r\nexport const restaurantIdToName = id => getItemNameById(id, restaurants);\r\n\r\nexport const dishCategoryIdToName = id => getItemNameById(id, dishCategories);\r\n\r\nexport const dishIdToName = id => getItemNameById(id, dishes);\r\n\r\nexport const getRestaurantById = id => getItemById(id, restaurants);\r\n\r\nexport const getDishesByCategoryId = category_id =>\r\n  getItemsByParentId({ category_id }, dishes);\r\n"]},"metadata":{},"sourceType":"module"}