import React from "react";
import PropTypes from "prop-types";
import { withStyles } from "@material-ui/core/styles";
import Radio from "@material-ui/core/Radio";
import RadioGroup from "@material-ui/core/RadioGroup";
import FormControlLabel from "@material-ui/core/FormControlLabel";
import FormHelperText from "@material-ui/core/FormHelperText";
import FormControl from "@material-ui/core/FormControl";
import * as R from "ramda";

const styles = theme => ({
  root: {
    display: "flex"
  },
  formControl: {
    marginLeft: theme.spacing.unit * 1,
    marginTop: 0
  },
  group: {
    marginLeft: theme.spacing.unit * 1,
    marginTop: 0,
    flexDirection: "column"
  }
});

class RadioSelect extends React.Component {
  handleChange = event => {
    this.setState({ selected: event.target.value });
    this.props.onChange(event.target.value);
  };

  render() {
    const { classes, items, direction, disabledIds, helperText } = this.props;
    const itemsToShow = items ? items : [];
    const groupDirection = direction ? direction : classes.group.flexDirection;
    return (
      <div className={classes.list}>
        <FormControl component="fieldset" className={classes.formControl}>
          <RadioGroup
            aria-label="Select size"
            name="Dish sizes"
            className={classes.group}
            style={{ flexDirection: groupDirection }}
            value={this.props.selected.toString()}
            onChange={this.handleChange}
          >
            {itemsToShow.map(({ id, name }) => (
              <FormControlLabel
                key={id}
                value={id.toString()}
                control={<Radio />}
                disabled={disabledIds && R.includes(id, disabledIds)}
                label={name}
              />
            ))}
            />
          </RadioGroup>
          {helperText && <FormHelperText>{helperText}</FormHelperText>}
        </FormControl>
      </div>
    );
  }
}

RadioSelect.propTypes = {
  classes: PropTypes.object.isRequired
};

export default withStyles(styles)(RadioSelect);
