{"ast":null,"code":"import _curry1 from './internal/_curry1';\nimport assocPath from './assocPath';\nimport lens from './lens';\nimport path from './path';\n/**\r\n * Returns a lens whose focus is the specified path.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.19.0\r\n * @category Object\r\n * @typedefn Idx = String | Int\r\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n * @sig [Idx] -> Lens s a\r\n * @param {Array} path The path to use.\r\n * @return {Lens}\r\n * @see R.view, R.set, R.over\r\n * @example\r\n *\r\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\r\n *\r\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\r\n *      //=> 2\r\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\r\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\r\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\r\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\r\n */\n\nvar lensPath =\n/*#__PURE__*/\n_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\nexport default lensPath;","map":null,"metadata":{},"sourceType":"module"}