import * as R from "ramda";
import MaskedInput from "react-text-mask";
import PropTypes from "prop-types";
import React from "react";

export const ExpirationDate = props => {
    const { inputRef, value, ...other } = props;

    let pValue = value;
    let mReg = /\d/;

    if (value && value.match(/^[2-9].*/)) {
        pValue = R.replace(/^[2-9].*/, "0" + value[0], value);
    }
    if (value && value.match(/^[1][3-9].*/)) {
        pValue = R.replace(/^[1][3-9].*/, "0" + value[0], value);
    }
    if (value && value.match(/\/[1].*/)) {
        pValue = R.replace(/\/[1].*/, "19", value);
    }

    if (value && value.match(/^[0].*/)) {
        mReg = /[1-9]/;
    }

    return (
        <MaskedInput
            {...other}
            value={pValue}
            ref={ref => {
                inputRef(ref ? ref.inputElement : null);
            }}
            mask={[/\d/, mReg, "/", /[1-9]/, /\d/]}
            placeholderChar={"\u2000"}
            placeholer="mm/dd"
        />
    );
};

ExpirationDate.propTypes = {
    inputRef: PropTypes.func.isRequired
};

export const CardNumber = props => {
    const { inputRef, ...other } = props;

    return (
        <MaskedInput
            {...other}
            ref={ref => {
                inputRef(ref ? ref.inputElement : null);
            }}
            mask={[
                /\d/,
                /\d/,
                /\d/,
                /\d/,
                " ",
                /\d/,
                /\d/,
                /\d/,
                /\d/,
                " ",
                /\d/,
                /\d/,
                /\d/,
                /\d/,
                " ",
                /\d/,
                /\d/,
                /\d/,
                /\d/
            ]}
            placeholderChar={"\u2000"}
            placeholer="8888-8888-8888-8888"
        />
    );
};

CardNumber.propTypes = {
    inputRef: PropTypes.func.isRequired
};
