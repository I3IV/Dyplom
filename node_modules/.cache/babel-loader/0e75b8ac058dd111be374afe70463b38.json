{"ast":null,"code":"import _objectSpread from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\I3IV\\\\Dyplom\\\\src\\\\node_modules\\\\components-illia\\\\pages\\\\account-page\\\\account-statistics\\\\account-statistics.js\";\nimport React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"../account-page.css\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Button, ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, TextField, Typography } from \"@material-ui/core\";\nimport { getCustomerDeliveryAddresses } from \"api\";\nimport Spinner from \"shared-components/spinner\";\n\nvar AccountStatistics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AccountStatistics, _Component);\n\n  function AccountStatistics() {\n    var _this;\n\n    _classCallCheck(this, AccountStatistics);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AccountStatistics).call(this));\n\n    _this.updateAddress = function (address) {\n      console.log(_this.state); //newAddress1, newAddress2, newAddress3\n    };\n\n    _this.handleChange = function (panel) {\n      return function (event, expanded) {\n        _this.setState({\n          expanded: expanded ? panel : false\n        });\n      };\n    };\n\n    getCustomerDeliveryAddresses().then(function (response) {\n      var n = 1;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = response[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          var id = item.id,\n              City_id = item.City_id,\n              address = _objectWithoutProperties(item, [\"id\", \"City_id\"]);\n\n          _this.setState(_defineProperty({}, \"address\".concat(n), address));\n\n          n++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }).then(function () {\n      return console.log(_this.state);\n    }).then(function () {\n      return _this.setState({\n        loading: false\n      });\n    });\n    _this.state = {\n      expanded: null,\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(AccountStatistics, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Paper, {\n        className: \"addresses\",\n        elevation: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.address1 && React.createElement(ExpansionPanel, {\n        expanded: this.state.expanded === \"address1\",\n        onChange: this.handleChange(\"address1\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.address1.CityName, \",\", \" \", this.state.address1.StreetName, \" \", this.state.address1.StreetNumber, \",\", \" \", this.state.address1.ZipCode), this.state.newAddress1 && React.createElement(Button, {\n        variant: \"outlined\",\n        className: \"button\",\n        onClick: function onClick() {\n          return _this2.updateAddress(\"address1\");\n        },\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Save\"))), React.createElement(ExpansionPanelDetails, {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"address-form \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        className: \"input\",\n        label: \"City\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress1 && this.state.newAddress1.CityName ? this.state.newAddress1.CityName : this.state.address1.CityName,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress1: _objectSpread({}, _this2.state.newAddress1, {\n              CityName: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"input\",\n        label: \"Street\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress1 && this.state.newAddress1.StreetName ? this.state.newAddress1.StreetName : this.state.address1.StreetName,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress1: _objectSpread({}, _this2.state.newAddress1, {\n              StreetName: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"input\",\n        label: \"Zip\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress1 && this.state.newAddress1.ZipCode ? this.state.newAddress1.ZipCode : this.state.address1.ZipCode,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress1: _objectSpread({}, _this2.state.newAddress1, {\n              ZipCode: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"input\",\n        label: \"Building\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress1 && this.state.newAddress1.StreetNumber ? this.state.newAddress1.StreetNumber : this.state.address1.StreetNumber,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress1: _objectSpread({}, _this2.state.newAddress1, {\n              StreetNumber: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })))), this.state.address2 && React.createElement(ExpansionPanel, {\n        expanded: this.state.expanded === \"address2\",\n        onChange: this.handleChange(\"address2\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.state.address2.CityName, \",\", \" \", this.state.address2.StreetName, \" \", this.state.address2.StreetNumber, \",\", \" \", this.state.address2.ZipCode), this.state.newAddress2 && React.createElement(Button, {\n        variant: \"outlined\",\n        className: \"button\",\n        onClick: function onClick() {\n          return _this2.updateAddress(\"address2\");\n        },\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Save\"))), React.createElement(ExpansionPanelDetails, {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"address-form \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        className: \"input\",\n        label: \"City\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress2 && this.state.newAddress2.CityName ? this.state.newAddress2.CityName : this.state.address2.CityName,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress2: _objectSpread({}, _this2.state.newAddress2, {\n              CityName: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"input\",\n        label: \"Street\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress2 && this.state.newAddress2.StreetName ? this.state.newAddress2.StreetName : this.state.address2.StreetName,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress2: _objectSpread({}, _this2.state.newAddress2, {\n              StreetName: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"input\",\n        label: \"Zip\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress2 && this.state.newAddress2.ZipCode ? this.state.newAddress2.ZipCode : this.state.address2.ZipCode,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress2: _objectSpread({}, _this2.state.newAddress2, {\n              ZipCode: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"input\",\n        label: \"Building\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress2 && this.state.newAddress2.StreetNumber ? this.state.newAddress2.StreetNumber : this.state.address2.StreetNumber,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress2: _objectSpread({}, _this2.state.newAddress2, {\n              StreetNumber: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })))), this.state.address3 && React.createElement(ExpansionPanel, {\n        expanded: this.state.expanded === \"address3\",\n        onChange: this.handleChange(\"address3\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(ExpansionPanelSummary, {\n        expandIcon: React.createElement(ExpandMoreIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.state.address3.CityName, \",\", \" \", this.state.address3.StreetName, \" \", this.state.address3.StreetNumber, \",\", \" \", this.state.address3.ZipCode), this.state.newAddress3 && React.createElement(Button, {\n        variant: \"outlined\",\n        className: \"button\",\n        onClick: function onClick() {\n          return _this2.updateAddress(\"address3\");\n        },\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Save\"))), React.createElement(ExpansionPanelDetails, {\n        className: \"details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"address-form \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        className: \"input\",\n        label: \"City\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress3 && this.state.newAddress3.CityName ? this.state.newAddress3.CityName : this.state.address3.CityName,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress3: _objectSpread({}, _this2.state.newAddress3, {\n              CityName: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"input\",\n        label: \"Street\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress3 && this.state.newAddress3.StreetName ? this.state.newAddress3.StreetName : this.state.address3.StreetName,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress3: _objectSpread({}, _this2.state.newAddress3, {\n              StreetName: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"input\",\n        label: \"Zip\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress3 && this.state.newAddress3.ZipCode ? this.state.newAddress3.ZipCode : this.state.address3.ZipCode,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress3: _objectSpread({}, _this2.state.newAddress3, {\n              ZipCode: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: \"input\",\n        label: \"Building\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: this.state.newAddress3 && this.state.newAddress3.StreetNumber ? this.state.newAddress3.StreetNumber : this.state.address3.StreetNumber,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            newAddress3: _objectSpread({}, _this2.state.newAddress3, {\n              StreetNumber: e.target.value\n            })\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return AccountStatistics;\n}(Component);\n\nexport { AccountStatistics as default };","map":{"version":3,"sources":["H:\\I3IV\\Dyplom\\src\\node_modules\\components-illia\\pages\\account-page\\account-statistics\\account-statistics.js"],"names":["React","Component","Paper","ExpandMoreIcon","Button","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","TextField","Typography","getCustomerDeliveryAddresses","Spinner","AccountStatistics","updateAddress","address","console","log","state","handleChange","panel","event","expanded","setState","then","response","n","item","id","City_id","loading","address1","CityName","StreetName","StreetNumber","ZipCode","newAddress1","e","target","value","address2","newAddress2","address3","newAddress3"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport \"../account-page.css\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport {\r\n  Button,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { getCustomerDeliveryAddresses } from \"api\";\r\nimport Spinner from \"shared-components/spinner\";\r\n\r\nexport default class AccountStatistics extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    getCustomerDeliveryAddresses()\r\n      .then(response => {\r\n        let n = 1;\r\n        for (let item of response) {\r\n          const { id, City_id, ...address } = item;\r\n          this.setState({ [`address${n}`]: address });\r\n          n++;\r\n        }\r\n      })\r\n      .then(() => console.log(this.state))\r\n      .then(() => this.setState({ loading: false }));\r\n    this.state = {\r\n      expanded: null,\r\n      loading: true\r\n    };\r\n  }\r\n  updateAddress = address => {\r\n    console.log(this.state);\r\n    //newAddress1, newAddress2, newAddress3\r\n  };\r\n  handleChange = panel => (event, expanded) => {\r\n    this.setState({\r\n      expanded: expanded ? panel : false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spinner />;\r\n    }\r\n    return (\r\n      <Paper className=\"addresses\" elevation={15}>\r\n        {this.state.address1 && (\r\n          <ExpansionPanel\r\n            expanded={this.state.expanded === \"address1\"}\r\n            onChange={this.handleChange(\"address1\")}\r\n          >\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n              <div className=\"summary\">\r\n                <Typography>\r\n                  {this.state.address1.CityName},{\" \"}\r\n                  {this.state.address1.StreetName}{\" \"}\r\n                  {this.state.address1.StreetNumber},{\" \"}\r\n                  {this.state.address1.ZipCode}\r\n                </Typography>\r\n                {this.state.newAddress1 && (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    className=\"button\"\r\n                    onClick={() => this.updateAddress(\"address1\")}\r\n                    color=\"primary\"\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails className=\"details\">\r\n              <div className=\"address-form \">\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"City\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress1 && this.state.newAddress1.CityName\r\n                      ? this.state.newAddress1.CityName\r\n                      : this.state.address1.CityName\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress1: {\r\n                        ...this.state.newAddress1,\r\n                        CityName: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"Street\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress1 && this.state.newAddress1.StreetName\r\n                      ? this.state.newAddress1.StreetName\r\n                      : this.state.address1.StreetName\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress1: {\r\n                        ...this.state.newAddress1,\r\n                        StreetName: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"Zip\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress1 && this.state.newAddress1.ZipCode\r\n                      ? this.state.newAddress1.ZipCode\r\n                      : this.state.address1.ZipCode\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress1: {\r\n                        ...this.state.newAddress1,\r\n                        ZipCode: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"Building\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress1 &&\r\n                    this.state.newAddress1.StreetNumber\r\n                      ? this.state.newAddress1.StreetNumber\r\n                      : this.state.address1.StreetNumber\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress1: {\r\n                        ...this.state.newAddress1,\r\n                        StreetNumber: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        )}\r\n        {this.state.address2 && (\r\n          <ExpansionPanel\r\n            expanded={this.state.expanded === \"address2\"}\r\n            onChange={this.handleChange(\"address2\")}\r\n          >\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n              <div className=\"summary\">\r\n                <Typography>\r\n                  {this.state.address2.CityName},{\" \"}\r\n                  {this.state.address2.StreetName}{\" \"}\r\n                  {this.state.address2.StreetNumber},{\" \"}\r\n                  {this.state.address2.ZipCode}\r\n                </Typography>\r\n                {this.state.newAddress2 && (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    className=\"button\"\r\n                    onClick={() => this.updateAddress(\"address2\")}\r\n                    color=\"primary\"\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails className=\"details\">\r\n              <div className=\"address-form \">\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"City\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress2 && this.state.newAddress2.CityName\r\n                      ? this.state.newAddress2.CityName\r\n                      : this.state.address2.CityName\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress2: {\r\n                        ...this.state.newAddress2,\r\n                        CityName: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"Street\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress2 && this.state.newAddress2.StreetName\r\n                      ? this.state.newAddress2.StreetName\r\n                      : this.state.address2.StreetName\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress2: {\r\n                        ...this.state.newAddress2,\r\n                        StreetName: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"Zip\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress2 && this.state.newAddress2.ZipCode\r\n                      ? this.state.newAddress2.ZipCode\r\n                      : this.state.address2.ZipCode\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress2: {\r\n                        ...this.state.newAddress2,\r\n                        ZipCode: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"Building\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress2 &&\r\n                    this.state.newAddress2.StreetNumber\r\n                      ? this.state.newAddress2.StreetNumber\r\n                      : this.state.address2.StreetNumber\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress2: {\r\n                        ...this.state.newAddress2,\r\n                        StreetNumber: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        )}\r\n        {this.state.address3 && (\r\n          <ExpansionPanel\r\n            expanded={this.state.expanded === \"address3\"}\r\n            onChange={this.handleChange(\"address3\")}\r\n          >\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n              <div className=\"summary\">\r\n                <Typography>\r\n                  {this.state.address3.CityName},{\" \"}\r\n                  {this.state.address3.StreetName}{\" \"}\r\n                  {this.state.address3.StreetNumber},{\" \"}\r\n                  {this.state.address3.ZipCode}\r\n                </Typography>\r\n\r\n                {this.state.newAddress3 && (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    className=\"button\"\r\n                    onClick={() => this.updateAddress(\"address3\")}\r\n                    color=\"primary\"\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails className=\"details\">\r\n              <div className=\"address-form \">\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"City\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress3 && this.state.newAddress3.CityName\r\n                      ? this.state.newAddress3.CityName\r\n                      : this.state.address3.CityName\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress3: {\r\n                        ...this.state.newAddress3,\r\n                        CityName: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"Street\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress3 && this.state.newAddress3.StreetName\r\n                      ? this.state.newAddress3.StreetName\r\n                      : this.state.address3.StreetName\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress3: {\r\n                        ...this.state.newAddress3,\r\n                        StreetName: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"Zip\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress3 && this.state.newAddress3.ZipCode\r\n                      ? this.state.newAddress3.ZipCode\r\n                      : this.state.address3.ZipCode\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress3: {\r\n                        ...this.state.newAddress3,\r\n                        ZipCode: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className=\"input\"\r\n                  label=\"Building\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  value={\r\n                    this.state.newAddress3 &&\r\n                    this.state.newAddress3.StreetNumber\r\n                      ? this.state.newAddress3.StreetNumber\r\n                      : this.state.address3.StreetNumber\r\n                  }\r\n                  onChange={e =>\r\n                    this.setState({\r\n                      newAddress3: {\r\n                        ...this.state.newAddress3,\r\n                        StreetNumber: e.target.value\r\n                      }\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        )}\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}