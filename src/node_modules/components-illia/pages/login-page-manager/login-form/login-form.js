import React, { Component } from "react";
import { Link } from "react-router-dom";

import Paper from "@material-ui/core/Paper";
import Button from "@material-ui/core/Button";
import TextField from "@material-ui/core/TextField";
import Dialog from "@material-ui/core/Dialog";
import DialogActions from "@material-ui/core/DialogActions";
import DialogContent from "@material-ui/core/DialogContent";
import DialogContentText from "@material-ui/core/DialogContentText";
import DialogTitle from "@material-ui/core/DialogTitle";
import "../login-page.css";
import { Redirect } from "react-router-dom";
import Spinner from "shared-components/spinner";
import { authStore } from "store";
import { signInCustomer } from "api";

export default class LoginForm extends Component {
  state = {
    open: false,
    email:'',
    password:'',
    isLoggedIn: false
  };
  async signIn() {
    const { email, password } = this.state;
    this.setState({ loading: true });
    signInCustomer(email, password)
      .then(user => {
        authStore.authenticate(user);
        this.setState({ error: null, isLoggedIn: true, loading: false });
      })
      .catch(error => {
        authStore.authenticate(false);
        this.setState({ error, loading: false });
      });
  }

  updateField(name, ev) {
    this.setState({ [name]: ev.target.value });
  }

  handleClickOpen = () => {
    this.setState({ open: true });
  };

  handleClose = () => {
    this.setState({ open: false });
  };
  render() {
    if (this.state.loading) return <Spinner />;
    if (!this.state.loading && this.state.isLoggedIn)
      return <Redirect to="/" />;
    return (
      <div className="form">
        <Paper className="paper-form" elevation={15}>
          <span className="label">Log in</span>
          <p>{this.state.error && this.state.error.message}</p>
          <TextField
            className="input"
            label="Email"
            margin="normal"
            variant="outlined"
            placeholder="example@domain.com"
            value={this.state.email}
            onChange={ev => this.updateField("email", ev)}
          />
          <TextField
            className="input"
            label="Password"
            margin="normal"
            variant="outlined"
            type="password"
            placeholder="password"
            value={this.state.password}
            onChange={ev => this.updateField("password", ev)}
          />
          <div className="buttons">
            <Button className="button" onClick={() => this.signIn()}>
              Log in
            </Button>
            <a href="localhost:3000" onClick={this.handleClickOpen}>
              Forgot your password?
            </a>
            <Link to="/for-business/registration">Don't have one?</Link>
          </div>

          <Dialog
            open={this.state.open}
            onClose={this.handleClose}
            aria-labelledby="form-dialog-title"
          >
            <DialogTitle id="form-dialog-title">Reset password</DialogTitle>
            <DialogContent>
              <DialogContentText>
                To reset your password, please enter your email address here. We
                will send you confirmation link.
              </DialogContentText>
              <TextField
                autoFocus
                margin="dense"
                id="name"
                label="Email Address"
                type="email"
                fullWidth
              />
            </DialogContent>
            <DialogActions>
              <Button className="button" onClick={this.handleClose}>
                Cancel
              </Button>
              <Button className="button" onClick={this.handleClose}>
                Confirm
              </Button>
            </DialogActions>
          </Dialog>
        </Paper>
      </div>
    );
  }
}
