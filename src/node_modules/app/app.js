import React, { Component, Fragment } from "react";
import { BrowserRouter as Router, Route } from "react-router-dom";
import { MuiThemeProvider } from "@material-ui/core/styles";
import "./app.css";
import muiTheme from "./muiTheme";
import MainPage from "../components-illia/pages/main-page";
import RegistrationPage from "../components-illia/pages/registration-page";
import LoginPage from "../components-illia/pages/login-page";
import AccountPage from "../components-illia/pages/account-page";
import RestaurantsPage from "components/pages/restaurants-page";
import RestaurantPage from "components-vitalii/pages/restaurant-page";
import DishesPage from "components/pages/dishes-page";
import ScheduleItems from "components/pages/schedule-items-page";
import PrivateRoute from "shared-components/private-route";
import client from "feathers/client";
import Spinner from "shared-components/spinner";
import DevTools from 'mobx-react-devtools';
import * as store from 'store'
import {Provider} from "mobx-react";

export default class App extends Component {
  state = {
    user: null,
    loading: true
  };

  componentWillMount() {
    console.log("COMPONENT WILL MOUNT")
    this.setState({ loading: true });
    client
      .authenticate()
      .then(response => {
        return client.passport.verifyJWT(response.accessToken);
      })
      .then(payload => {
        return client.service("customers").get(payload.userId);
      })
      .then(user => {
        client.set("user", user);
        this.setState({ user, loading: false });
      })
      .catch(() => {
        client.set("user", undefined);
        this.setState({ loading: false });
      });
  }

  render() {
    client.on("logout", () => {
      console.log("LOGGING OUT");
      this.forceUpdate();
      client.set("user", undefined);
    });
    if (this.state.loading) return <Spinner />;
    return (
      <Router>
        <Provider store={store}>
        <Fragment>
          <MuiThemeProvider theme={muiTheme}>
            <Route path="/" component={MainPage} exact />
            <Route path="/login" component={LoginPage} />
            <Route path="/registration" component={RegistrationPage} />
            <PrivateRoute path="/account" component={AccountPage} />
            <Route path="/restaurants/:id" component={RestaurantPage} />
          <Route exact path="/restaurants" component={RestaurantsPage} />
          <Route path="/dishes" component={DishesPage} />
          <PrivateRoute path="/scheduler" component={ScheduleItems} />
          </MuiThemeProvider>
          <DevTools />
        </Fragment>
        </Provider>
      </Router>
    );
  }
}
