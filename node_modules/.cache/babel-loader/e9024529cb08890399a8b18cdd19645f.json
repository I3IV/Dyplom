{"ast":null,"code":"import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xany from './internal/_xany';\n/**\r\n * Returns `true` if at least one of elements of the list match the predicate,\r\n * `false` otherwise.\r\n *\r\n * Dispatches to the `any` method of the second argument, if present.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig (a -> Boolean) -> [a] -> Boolean\r\n * @param {Function} fn The predicate function.\r\n * @param {Array} list The array to consider.\r\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\r\n *         otherwise.\r\n * @see R.all, R.none, R.transduce\r\n * @example\r\n *\r\n *      var lessThan0 = R.flip(R.lt)(0);\r\n *      var lessThan2 = R.flip(R.lt)(2);\r\n *      R.any(lessThan0)([1, 2]); //=> false\r\n *      R.any(lessThan2)([1, 2]); //=> true\r\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;","map":null,"metadata":{},"sourceType":"module"}