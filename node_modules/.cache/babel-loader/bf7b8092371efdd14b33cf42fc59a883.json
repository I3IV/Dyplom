{"ast":null,"code":"import _curry2 from './internal/_curry2';\nimport _reduce from './internal/_reduce';\nimport ap from './ap';\nimport curryN from './curryN';\nimport map from './map';\n/**\r\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\r\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.7.0\r\n * @category Function\r\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\r\n * @param {Function} fn The function to lift into higher context\r\n * @return {Function} The lifted function.\r\n * @see R.lift, R.ap\r\n * @example\r\n *\r\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\r\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\r\n */\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nexport default liftN;","map":null,"metadata":{},"sourceType":"module"}