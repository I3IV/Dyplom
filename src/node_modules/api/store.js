import {
  authStore,
  calendarStore,
  citiesStore,
  productsStore,
  restaurantsStore
} from "store";
import {
  filterByCity,
  getAllCities,
  getAllRestaurants,
  getEventsNumber,
  getProductCategories
} from "api";
import * as R from "ramda";

export const setAuthStore = user => {
  authStore.setUser(user);
  authStore.authenticate(true);
};

export const initRestaurantsStore = () =>
  getAllRestaurants()
    .then(restaurants => {
      restaurantsStore.setRestaurants(restaurants);
    })
    .then(() => {
      const citiesIds = R.map(
        R.path(["address", "City_id"]),
        restaurantsStore.restaurants
      );
      const rCities = R.filter(
        R.compose(
          R.includes(R.__, citiesIds),
          R.prop("id")
        ),
        citiesStore.cities
      );
      citiesStore.setCitiesWithRestaurants(rCities);
      console.log("authStore.user", authStore.user);
      const city = authStore.isAuthenticated
        ? R.find(R.propEq("id", authStore.user.City_id), rCities)
        : R.find(R.propEq("CityName", "Lublin"), rCities);
      if (city) {
        citiesStore.setSelectedCity(city.CityName);
        filterByCity(city.CityName);
      }
    });
export const initCalendarStore = () =>
  getEventsNumber().then(response => {
    calendarStore.setBadge(response);
  });
export const initCitiesStore = () =>
  getAllCities().then(cities => {
    citiesStore.setCities(cities);
  });
export const initProductsStore = () =>
  getProductCategories().then(categories => {
    productsStore.setProductCategories(categories);
  });
