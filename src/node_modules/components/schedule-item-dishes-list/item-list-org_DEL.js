import React from 'react';
import PropTypes from 'prop-types';
import Badge from '@material-ui/core/Badge';
import { withStyles } from '@material-ui/core/styles';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';
import ListItemText from '@material-ui/core/ListItemText';
import Checkbox from '@material-ui/core/Checkbox';
import Avatar from '@material-ui/core/Avatar';

const styles = theme => ({
  list: {
    width: '100%',
    maxWidth: 360,
    maxHeight: 200,
    backgroundColor: theme.palette.background.paper,
  },
  margin: {
   margin: theme.spacing.unit,
 },
});

class CheckboxListSecondary extends React.Component {
  state = {
    checked: [1],
  };

  handleToggle = value => () => {
    const { checked } = this.state;
    const currentIndex = checked.indexOf(value);
    const newChecked = [...checked];

    if (currentIndex === -1) {
      newChecked.push(value);
    } else {
      newChecked.splice(currentIndex, 1);
    }

    this.setState({
      checked: newChecked,
    });
  };

  render() {
    const { classes, items } = this.props;
    const itemsToShow = items ? items : [];
      return (
        <div className={classes.list}>
          <List dense>
            {itemsToShow.map(({name, id:value, count}) => (
              <ListItem key={value} button>
                <Badge className={classes.margin} badgeContent={count} color="primary">
                   <Avatar alt="Remy Sharp" src={`/images/dishes/${value}.jpg`} />
                 </Badge>
                <ListItemText primary={name} />
                <ListItemSecondaryAction>
                  <Checkbox
                    onChange={this.handleToggle(value)}
                    checked={this.state.checked.indexOf(value) === -1}
                  />
                </ListItemSecondaryAction>
              </ListItem>
            ))}
          </List>
        </div>
      );
  }
}

CheckboxListSecondary.propTypes = {
  classes: PropTypes.object.isRequired,
};

export default withStyles(styles)(CheckboxListSecondary);
