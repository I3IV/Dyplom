import React from 'react';
import PropTypes from 'prop-types';
import Badge from '@material-ui/core/Badge';
import { withStyles } from '@material-ui/core/styles';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import Avatar from '@material-ui/core/Avatar';
import Chip from '@material-ui/core/Chip';
import ArrowUp from '@material-ui/icons/KeyboardArrowUp';
import ArrowDown from '@material-ui/icons/KeyboardArrowDown';
import IconButton from '@material-ui/core/IconButton';

const styles = theme => ({
  list: {
    width: '100%',
    maxWidth: 360,
    maxHeight: 200,
    backgroundColor: theme.palette.background.paper,
  },
  margin: {
   margin: theme.spacing.unit,
 },
 arrows: {
   display: "flex",
   flexDirection: "column",
   padding: "0px"
 },
 iconButton: {
   padding: "0px"
 }
});

class CheckboxListSecondary extends React.Component {
  state = {
    checked: [1],
  };


  render() {
    const { classes, items, onDishUp, onDishDown, onDishDelete  } = this.props;
    const itemsToShow = items ? items : [];
      return (
        <div className={classes.list}>
          <List dense>
            {itemsToShow.map(({name, id, count}) => (
              <ListItem key={id}>
                <div className={classes.arrows}>
                  <IconButton  className={classes.iconButton} aria-label="Add" onClick={ () => {onDishUp(id)} }>
                     <ArrowUp />
                   </IconButton>
                   <IconButton  className={classes.iconButton} aria-label="Remove" onClick={ () => {onDishDown(id)} }>
                      <ArrowDown />
                    </IconButton>
                </div>

                <Chip
                   avatar={<Badge  badgeContent={count} color="primary">
                            <Avatar alt="Natacha" src={`/images/dishes/${id}.jpg`} />

                           </Badge>}
                   label={name}
                   onDelete={() => {onDishDelete(id)}}
                   className={classes.chip}
                   clickable
                 />
              </ListItem>
            ))}
          </List>
        </div>
      );
  }
}

CheckboxListSecondary.propTypes = {
  classes: PropTypes.object.isRequired,
};

export default withStyles(styles)(CheckboxListSecondary);
