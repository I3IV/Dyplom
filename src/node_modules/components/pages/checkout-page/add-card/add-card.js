import React, { Fragment, Component } from "react";
import PropTypes from "prop-types";
import { Visibility, VisibilityOff } from "@material-ui/icons";
import {
  Paper,
  InputAdornment,
  IconButton,
  FormControlLabel,
  Typography,
  Checkbox,
  TextField
} from "@material-ui/core";
import { withStyles } from "@material-ui/core/styles";
import styles from "./styles";
import { CardNumber, ExpirationDate } from "./inputMasks";
import PromoCode from "./promo-code";

class AddCard extends Component {
  state = {
    showPassword: false,
    cvv: "",
    checkedAdd: false
  };
  handleClickShowPassword = () => {
    this.setState({ showPassword: !this.state.showPassword });
  };

  componentDidMount() {}
  handleChange = name => event => {
    this.setState({ [name]: event.target.value });
  };
  handleChangeCheckBox = name => event => {
    this.setState({ [name]: event.target.checked });
  };
  onValidPromocode = promocode => {
    console.log("PROMOCODE", promocode);
    this.setState({ promocode });
  };
  render() {
    const { classes } = this.props;
    return (
      <Fragment>
        <div className={classes.root}>
          <Paper className={classes.paper} elevation={10}>
            <div className={classes.inputs}>
              <Typography gutterBottom variant="h6" component="h2">
                Add credit or debit cart
              </Typography>
              <div className={classes.topInputs}>
                <TextField
                  className="input"
                  label="Card number"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  onChange={this.handleChange("cardNumber")}
                  InputProps={{ inputComponent: CardNumber }}
                  placeholder="8888-8888-8888-8888"
                />
                <TextField
                  className="input"
                  label="Card holder"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  placeholder="John Dudon"
                />
              </div>
              <div className={classes.bottomInputs}>
                <TextField
                  label="Expiration date"
                  style={{ width: "48%" }}
                  placeholder="mm/dd"
                  variant="outlined"
                  value={this.state.expDate}
                  onChange={this.handleChange("expDate")}
                  id="formatted-text-mask-input"
                  InputProps={{ inputComponent: ExpirationDate }}
                />
                <TextField
                  style={{ margin: 0, width: "48%" }}
                  label="CVV"
                  margin="normal"
                  variant="outlined"
                  value={this.state.cvv}
                  onChange={this.handleChange("cvv")}
                  inputProps={{ maxLength: 4 }}
                  InputProps={{
                    endAdornment: (
                      <InputAdornment position="end">
                        <IconButton
                          aria-label="Toggle password visibility"
                          onClick={this.handleClickShowPassword}
                        >
                          {this.state.showPassword ? (
                            <VisibilityOff />
                          ) : (
                            <Visibility />
                          )}
                        </IconButton>
                      </InputAdornment>
                    )
                  }}
                  type={this.state.showPassword ? "text" : "password"}
                />
              </div>
            </div>
          </Paper>
          <FormControlLabel
            control={
              <Checkbox
                checked={this.state.checkedAdd}
                onChange={this.handleChangeCheckBox("checkedAdd")}
                value="checkedAdd"
              />
            }
            label="Add to my payment methods"
          />
          <PromoCode onValidPromocode={this.onValidPromocode} />
        </div>
      </Fragment>
    );
  }
}

AddCard.propTypes = {
  classes: PropTypes.object.isRequired
};

export default withStyles(styles)(AddCard);
