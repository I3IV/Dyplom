{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\React\\\\Tmp\\\\restaurant\\\\src\\\\node_modules\\\\components\\\\grid-list\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 500,\n      height: 450\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    }\n  };\n};\n\nvar tileData = [{\n  title: 'Ima5ge',\n  author: 'author'\n}, {\n  title: 'Image',\n  author: 'author'\n}, {\n  title: 'Image',\n  author: 'author'\n}, {\n  title: 'Image',\n  author: 'author'\n}, {\n  title: 'Image',\n  author: 'author'\n}, {\n  title: 'Image',\n  author: 'author'\n}];\n\nfunction TitlebarGridList(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 180,\n    className: classes.gridList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"December\")), tileData.map(function (tile) {\n    return React.createElement(GridListTile, {\n      key: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: tile.title,\n      subtitle: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"by: \", tile.author),\n      actionIcon: React.createElement(IconButton, {\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(InfoIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  })));\n}\n\nTitlebarGridList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(TitlebarGridList);","map":{"version":3,"sources":["D:\\Studia\\React\\Tmp\\restaurant\\src\\node_modules\\components\\grid-list\\index.js"],"names":["React","PropTypes","withStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","tileData","title","author","TitlebarGridList","props","classes","map","tile","img","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n});\r\n\r\nconst tileData = [\r\n  {\r\n    title: 'Ima5ge',\r\n     author: 'author'\r\n  },\r\n  {\r\n     title: 'Image',\r\n     author: 'author'\r\n   },\r\n   {\r\n      title: 'Image',\r\n      author: 'author'\r\n    },\r\n    {\r\n       title: 'Image',\r\n       author: 'author'\r\n     },\r\n     {\r\n        title: 'Image',\r\n        author: 'author'\r\n      },\r\n      {\r\n         title: 'Image',\r\n         author: 'author'\r\n       }\r\n      ];\r\n\r\nfunction TitlebarGridList(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={180} className={classes.gridList}>\r\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\r\n          <ListSubheader component=\"div\">December</ListSubheader>\r\n        </GridListTile>\r\n        {tileData.map(tile => (\r\n          <GridListTile key={tile.title}>\r\n            <img src={tile.img} alt={tile.title} />\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              subtitle={<span>by: {tile.author}</span>}\r\n              actionIcon={\r\n                <IconButton className={classes.icon}>\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n\r\nTitlebarGridList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TitlebarGridList);\r\n"]},"metadata":{},"sourceType":"module"}