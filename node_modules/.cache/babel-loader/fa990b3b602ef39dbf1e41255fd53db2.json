{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\src\\\\node_modules\\\\components\\\\grid-list-item-dish\\\\index.js\";\nimport React from 'react';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport * as R from 'ramda';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './grid-list-item.css';\nvar theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FAFAFA'\n    },\n    secondary: {\n      main: '#BDBDBD'\n    } // This is just green.A700 as hex.\n\n  }\n});\n\nvar styles = function styles(theme) {\n  return createStyles({\n    button: {\n      margin: theme.spacing.unit,\n      borderColor: 'white'\n    },\n    tileBar: {\n      height: \"auto\",\n      padding: \"0.5rem\"\n    },\n    priceBar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    extendedIcon: {\n      marginRight: theme.spacing.unit\n    }\n  });\n};\n\nvar GridListItem = function GridListItem(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      price = _ref.price,\n      description = _ref.description,\n      restaurant = _ref.restaurant,\n      classes = _ref.classes;\n  var shortDescription = \"\".concat(R.take(140, description)).concat(description.length > 140 ? '...' : '');\n  return React.createElement(\"div\", {\n    className: \"list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/images/dishes/\".concat(id, \".jpg\"),\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(GridListTileBar, {\n    className: classes.tileBar,\n    title: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle2\",\n      color: \"secondary\",\n      gutterBottom: true,\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"\\\"\", restaurant, \"\\\" restaurant\"), React.createElement(Typography, {\n      variant: \"title\",\n      color: \"primary\",\n      gutterBottom: true,\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, name)),\n    subtitle: React.createElement(\"div\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, shortDescription),\n    actionIcon: React.createElement(\"div\", {\n      className: classes.priceBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"$\".concat(price)), React.createElement(Button, {\n      variant: \"outlined\",\n      \"aria-label\": \"Add\",\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n};\n\nGridListItem.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(GridListItem);","map":{"version":3,"sources":["D:\\Studia\\React\\I3IV\\Dyplom\\src\\node_modules\\components\\grid-list-item-dish\\index.js"],"names":["React","GridListTileBar","Button","PropTypes","withStyles","createStyles","Typography","R","MuiThemeProvider","createMuiTheme","theme","palette","primary","main","secondary","styles","button","margin","spacing","unit","borderColor","tileBar","height","padding","priceBar","display","alignItems","justifyContent","extendedIcon","marginRight","GridListItem","id","name","price","description","restaurant","classes","shortDescription","take","length","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAoBC,YAApB,QAAwC,0BAAxC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,0BAAjD;AAEA,OAAO,sBAAP;AAEA,IAAMC,KAAK,GAAGD,cAAc,CAAC;AAC3BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACNC,MAAAA,IAAI,EAAE;AADA,KADF;AAINC,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAE;AADG,KAJL,CAMH;;AANG;AADkB,CAAD,CAA5B;;AAYA,IAAME,MAAM,GAAG,SAATA,MAAS,CAAAL,KAAK;AAAA,SACpBL,YAAY,CAAC;AACXW,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IADhB;AAENC,MAAAA,WAAW,EAAE;AAFP,KADG;AAKXC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,OAAO,EAAE;AAFF,KALE;AASXC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE,MADD;AAERC,MAAAA,UAAU,EAAE,QAFJ;AAGRC,MAAAA,cAAc,EAAE;AAHR,KATC;AAcXC,IAAAA,YAAY,EAAE;AACZC,MAAAA,WAAW,EAAEnB,KAAK,CAACQ,OAAN,CAAcC;AADf;AAdH,GAAD,CADQ;AAAA,CAApB;;AAsBA,IAAMW,YAAY,GAAG,SAAfA,YAAe,OAAyD;AAAA,MAAvDC,EAAuD,QAAvDA,EAAuD;AAAA,MAAnDC,IAAmD,QAAnDA,IAAmD;AAAA,MAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,MAAtCC,WAAsC,QAAtCA,WAAsC;AAAA,MAAzBC,UAAyB,QAAzBA,UAAyB;AAAA,MAAbC,OAAa,QAAbA,OAAa;AAE5E,MAAMC,gBAAgB,aAAM9B,CAAC,CAAC+B,IAAF,CAAO,GAAP,EAAYJ,WAAZ,CAAN,SAAiCA,WAAW,CAACK,MAAZ,GAAqB,GAArB,GAA2B,KAA3B,GAAmC,EAApE,CAAtB;AAEA,SACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,2BAAoBR,EAApB,SAAR;AAAsC,IAAA,GAAG,EAAEC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEtB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,eAAD;AACF,IAAA,SAAS,EAAE0B,OAAO,CAACf,OADjB;AAEF,IAAA,KAAK,EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,KAAK,EAAC,WAAtC;AAAkD,MAAA,YAAY,MAA9D;AAA+D,MAAA,MAAM,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACIc,UADJ,kBADJ,EAII,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,YAAY,MAAxD;AAAyD,MAAA,MAAM,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,IADH,CAJJ,CAHN;AAYF,IAAA,QAAQ,EACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,gBADH,CAbR;AAiBF,IAAA,UAAU,EACE;AAAK,MAAA,SAAS,EAAED,OAAO,CAACZ,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACSS,KADT,EADF,EAIE,oBAAC,MAAD;AAAS,MAAA,OAAO,EAAC,UAAjB;AAA4B,oBAAW,KAAvC;AAA6C,MAAA,KAAK,EAAC,SAAnD;AAA6D,MAAA,SAAS,EAAEG,OAAO,CAACpB,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAlBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CAFF,CADA;AAmCD,CAvCD;;AAyCAc,YAAY,CAACU,SAAb,GAAyB;AACvBJ,EAAAA,OAAO,EAAEjC,SAAS,CAACsC,MAAV,CAAiBC;AADH,CAAzB;AAKA,eAAetC,UAAU,CAACW,MAAD,CAAV,CAAmBe,YAAnB,CAAf","sourcesContent":["import React from 'react';\n\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withStyles,createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport * as R from 'ramda'\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport './grid-list-item.css'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n       main: '#FAFAFA',\n     },\n     secondary: {\n       main: '#BDBDBD',\n     }, // This is just green.A700 as hex.\n  },\n});\n\n\nconst styles = theme =>\ncreateStyles({\n  button: {\n    margin: theme.spacing.unit,\n    borderColor: 'white'\n  },\n  tileBar: {\n    height: \"auto\",\n    padding: \"0.5rem\"\n  },\n  priceBar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\n\n\nconst GridListItem = ({id, name, price, description, restaurant, classes}) => {\n\n  const shortDescription = `${R.take(140, description)}${description.length > 140 ? '...' : ''}` ;\n\n  return (\n  <div className='list-item'>\n    <img src={`/images/dishes/${id}.jpg`} alt={name} />\n    <MuiThemeProvider theme={theme}>\n          <GridListTileBar\n        className={classes.tileBar}\n        title={\n                <div>\n                    <Typography variant=\"subtitle2\" color=\"secondary\" gutterBottom noWrap>\n                      \"{restaurant}\" restaurant\n                    </Typography>\n                    <Typography variant=\"title\" color=\"primary\" gutterBottom noWrap>\n                      {name}\n                    </Typography>\n                </div>\n              }\n        subtitle={\n                  <div className=\"description\">\n                    {shortDescription}\n                  </div>\n                  }\n        actionIcon={\n                    <div className={classes.priceBar}>\n                      <Typography variant=\"subtitle1\" color=\"primary\">\n                          {`$${price}`}\n                       </Typography>\n                      <Button  variant=\"outlined\" aria-label=\"Add\" color=\"primary\" className={classes.button}>\n                      Add\n                      </Button>\n                    </div>\n                    }\n      />\n    </MuiThemeProvider>\n</div>\n  )\n}\n\nGridListItem.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(styles)(GridListItem);\n"]},"metadata":{},"sourceType":"module"}