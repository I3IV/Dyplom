import client from "feathers/client";
import { DELIVER_TO_ADDRESS } from "shared-components/constants";
import * as R from "ramda";
import { authStore } from "store";

export const createOrderInRestaurant = orderInCart => {
  console.log("orderInCart", orderInCart);
  const newOrder = {
    OrderStatus_id: 1,
    Restaurant_id: orderInCart.Restaurant_id,
    Cust_id: authStore.isAuthenticated ? authStore.user.id : 0,
    PaymentType_id: 1,
    Preferences: orderInCart.comment,
    OrderDateTime: orderInCart.orderDateTime,
    OrderTotalPrice: orderInCart.totalPrice
  };

  createOrder(newOrder).then(newOrder => {
    orderInCart.dishes.forEach(async dish => {
      await createOrderDish({
        Order_id: newOrder.id,
        Dish_id: dish.id,
        Ammount: dish.count,
        OrderDishPrice: dish.price
      }).then(newDish => {
        dish.addlProducts.forEach(async product => {
          console.log("product", product);
          await createAddlProductForOrder({
            Product_id: product.id,
            OrderDish_id: newDish.id
          });
        });
      });
    });
    console.log("ADDRESS ID", orderInCart.address_id)
    if (orderInCart.location === DELIVER_TO_ADDRESS)
      createFoodDelivery({
        Cust_id: authStore.isAuthenticated ? authStore.user.id : 0,
        Address_id: orderInCart.address_id,
        Order_id: newOrder.id,
        Phone: orderInCart.phone ? orderInCart.phone : null,
        FoodDeliveryDateTime: orderInCart.orderDateTime,
        Comment: orderInCart.comment
      });
  });
};

export const createOrder = order => client.service("orders").create(order);

export const createOrderDish = orderDish =>
  client.service("order-dishes").create(orderDish);

export const createAddlProductForOrder = addlProducts =>
  client.service("additional-products-for-order").create(addlProducts);

export const createFoodDelivery = delivery =>
  client.service("food-delivery").create(delivery);
