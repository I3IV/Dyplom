{"ast":null,"code":"import _classCallCheck from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\src\\\\node_modules\\\\components\\\\pages\\\\restaurants-page\\\\index.js\";\nimport React, { Fragment, Component } from 'react';\nimport Header from 'components/shared-components/header';\nimport GridList from 'components/grid-list';\nimport SearchPanel from 'components/search-panel';\nimport RestaurantFilter from 'components/restaurant-filter';\nimport RestListItem from 'components/grid-list-item-restaurant';\nimport './restaurant-page.css';\nimport restaurants from 'api/mock-restaurants';\nvar navItems = [{\n  label: 'Restaurants',\n  link: 'restaurants'\n}, {\n  label: 'Dishes',\n  link: 'dishes'\n}, {\n  label: 'Login',\n  link: 'login'\n}, {\n  label: 'Registration',\n  link: 'registration'\n}];\n\nvar RestaurantPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RestaurantPage, _Component);\n\n  function RestaurantPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RestaurantPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RestaurantPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      restaurants: restaurants,\n      term: '',\n      filter: {\n        noFilter: true,\n        country: '',\n        city: '',\n        seats: '',\n        cuisine: ''\n      }\n    };\n\n    _this.onSearchChange = function (term) {\n      _this.setState({\n        term: term\n      });\n    };\n\n    _this.onFilterChange = function (filter) {\n      console.log(\"onFilterChange\", filter);\n\n      _this.setState({\n        filter: filter\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RestaurantPage, [{\n    key: \"search\",\n    value: function search(restaurants, term) {\n      if (term.length === 0) {\n        return restaurants;\n      }\n\n      return restaurants.filter(function (r) {\n        return r.name.toLowerCase().indexOf(term.toLowerCase()) > -1;\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(restaurants, _filter) {\n      if (_filter.noFilter) return restaurants;\n      console.log(\"filter\");\n      var filtered = restaurants;\n\n      if (_filter.country.length !== 0) {\n        filtered = filtered.filter(function (r) {\n          return r.country === _filter.country;\n        });\n      }\n\n      if (_filter.city.length !== 0) {\n        filtered = filtered.filter(function (r) {\n          return r.city === _filter.city;\n        });\n      }\n\n      if (_filter.seatsNumber.length !== 0) {\n        filtered = filtered.filter(function (r) {\n          return r.seatsNumber >= _filter.seats;\n        });\n      }\n\n      if (_filter.cuisine.length !== 0) {\n        filtered = filtered.filter(function (r) {\n          return r.cuisine === _filter.cuisine;\n        });\n      }\n\n      return filtered;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"render\");\n      var _this$state = this.state,\n          restaurants = _this$state.restaurants,\n          filter = _this$state.filter,\n          term = _this$state.term;\n      var visibleItems = this.filter(this.search(restaurants, term), filter);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Header, {\n        navItems: navItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rest-page-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(SearchPanel, {\n        onSearchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(RestaurantFilter, {\n        onFilterChange: this.onFilterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))), React.createElement(GridList, {\n        data: visibleItems,\n        GridListItem: RestListItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RestaurantPage;\n}(Component);\n\nexport { RestaurantPage as default };","map":{"version":3,"sources":["D:\\Studia\\React\\I3IV\\Dyplom\\src\\node_modules\\components\\pages\\restaurants-page\\index.js"],"names":["React","Fragment","Component","Header","GridList","SearchPanel","RestaurantFilter","RestListItem","restaurants","navItems","label","link","RestaurantPage","state","term","filter","noFilter","country","city","seats","cuisine","onSearchChange","setState","onFilterChange","console","log","length","r","name","toLowerCase","indexOf","filtered","seatsNumber","visibleItems","search"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\n\nimport Header from 'components/shared-components/header';\nimport GridList from 'components/grid-list';\nimport SearchPanel from 'components/search-panel';\nimport RestaurantFilter from 'components/restaurant-filter';\n\nimport RestListItem from 'components/grid-list-item-restaurant'\n\nimport './restaurant-page.css'\n\nimport restaurants from 'api/mock-restaurants';\n\nconst navItems = [\n  {label: 'Restaurants', link: 'restaurants'},\n  {label: 'Dishes', link: 'dishes' },\n  {label: 'Login', link: 'login' },\n  {label: 'Registration', link: 'registration'}\n];\n\n\nexport default class RestaurantPage extends Component{\n\n  state = {\n    restaurants: restaurants,\n    term: '',\n    filter: {\n              noFilter: true,\n              country: '',\n              city: '',\n              seats: '',\n              cuisine: ''\n              }\n  }\n\n  onSearchChange = (term) => {\n  this.setState({ term });\n};\n  onFilterChange = (filter) => {\n    console.log(\"onFilterChange\", filter);\n  this.setState({ filter });\n};\n\n  search(restaurants, term) {\n    if(term.length === 0) {\n      return restaurants;\n    }\n\n    return restaurants.filter( (r) => {\n      return r.name\n             .toLowerCase()\n             .indexOf(term.toLowerCase()) > -1\n    })\n  };\n\n  filter(restaurants, filter ) {\n    if(filter.noFilter) return restaurants;\n      console.log(\"filter\");\n    let filtered = restaurants;\n\n    if(filter.country.length !== 0){\n      filtered = filtered.filter((r) => r.country === filter.country);\n    }\n    if(filter.city.length !== 0){\n      filtered = filtered.filter((r) => r.city === filter.city);\n    }\n    if(filter.seatsNumber.length !== 0){\n      filtered = filtered.filter((r) => r.seatsNumber >= filter.seats);\n    }\n    if(filter.cuisine.length !== 0){\n      filtered = filtered.filter((r) => r.cuisine === filter.cuisine);\n    }\n    return filtered;\n  }\n\n  render(){\n      console.log(\"render\");\n    const { restaurants, filter, term } = this.state;\n\n    const visibleItems = this.filter(\n                        this.search(restaurants, term),\n                        filter);\n\n    return (\n      <Fragment>\n        <Header navItems={ navItems } />\n        <div className='rest-page-content'>\n          <div className=\"filter-bar\">\n            <div className=\"search-bar\">\n              <SearchPanel onSearchChange = {this.onSearchChange}/>\n            </div>\n              <RestaurantFilter onFilterChange={this.onFilterChange}/>\n          </div>\n        </div>\n        <GridList data={ visibleItems } GridListItem = {RestListItem}/>\n      </Fragment>\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}