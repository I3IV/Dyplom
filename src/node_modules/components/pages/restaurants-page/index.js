import React, { Fragment, Component } from 'react';

import Header from 'components/shared-components/header';
import GridList from 'components/grid-list';
import SearchPanel from 'components/search-panel';
import RestaurantFilter from 'components/restaurant-filter';

import RestListItem from 'components/grid-list-item-restaurant'

import './restaurant-page.css'

import restaurants from 'api/mock-restaurants';

const navItems = [
  {label: 'Dishes', link: 'dishes' },
  {label: 'Login', link: 'login' },
  {label: 'Registration', link: 'registration'}
];


export default class RestaurantPage extends Component{

  state = {
    restaurants: restaurants,
    term: '',
    filter: {
              noFilter: false,
              country: '',
              city: '',
              seats: '',
              cuisine: ''
              }
  }

  onSearchChange = (term) => {
  this.setState({ term });
};
  onFilterChange = (filter) => {
    console.log("onFilterChange", filter);
  this.setState({ filter });
};

  search(restaurants, term) {
    if(term.length === 0) {
      return restaurants;
    }

    return restaurants.filter( (r) => {
      return r.name
             .toLowerCase()
             .indexOf(term.toLowerCase()) > -1
    })
  };

  filter(restaurants, filter ) {
    if(filter.noFilter) return restaurants;
      console.log("In filter, setting", filter);
    let filtered = restaurants;

    if(filter.country.length !== 0){
      filtered = filtered.filter((r) => r.country === filter.country);
    }
    if(filter.city.length !== 0){
      filtered = filtered.filter((r) => r.city === filter.city);
    }
    if(filter.seats.length !== 0){
      filtered = filtered.filter((r) => r.seats >= filter.seats);
    }
    if(filter.cuisine.length !== 0){
      filtered = filtered.filter((r) => r.cuisine === filter.cuisine);
    }
    return filtered;
  }

  render(){
      console.log("render");
    const { restaurants, filter, term } = this.state;

    const visibleItems = this.filter(
                        this.search(restaurants, term),
                        filter);

    return (
      <Fragment>
        <Header navItems={ navItems } />
        <div className='rest-page-content'>
          <div className="filter-bar">
            <div className="search-bar">
              <SearchPanel onSearchChange = {this.onSearchChange}/>
            </div>
              <RestaurantFilter onFilterChange={this.onFilterChange} filter={this.state.filter}/>
          </div>
        </div>
        <GridList data={ visibleItems } GridListItem = {RestListItem}/>
      </Fragment>
    )
  };
}
