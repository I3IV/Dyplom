{"ast":null,"code":"import _regeneratorRuntime from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport client from \"feathers/client\";\nimport { getDish } from \"api\";\nimport * as R from \"ramda\";\nimport { calendarStore } from \"store\";\nexport var getEventsNumber = function getEventsNumber() {\n  return client.service(\"schedule-items\").find({\n    query: {\n      Cust_id: client.get(\"user\").id\n    }\n  }).then(function (res) {\n    return res.data.length;\n  });\n};\nexport var getEvents = function getEvents() {\n  return getScheduleItemsByCustId(client.get(\"user\").id).then(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(scheduleItems) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return Promise.all(scheduleItems.map(\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee2(si) {\n                  var dishes, end, event;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.next = 2;\n                          return Promise.all(si.dishes_in_schedule_items.map(\n                          /*#__PURE__*/\n                          function () {\n                            var _ref3 = _asyncToGenerator(\n                            /*#__PURE__*/\n                            _regeneratorRuntime.mark(function _callee(dishInSI) {\n                              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                while (1) {\n                                  switch (_context.prev = _context.next) {\n                                    case 0:\n                                      _context.next = 2;\n                                      return client.service(\"dishes-in-menu\").findOne({\n                                        query: {\n                                          MenuDish_id: dishInSI.Dish_id\n                                        }\n                                      }).then(function (dishInMenu) {\n                                        return getDish(dishInMenu.rest_dish_size.RestaurantDish_id).then(function (restDish) {\n                                          return _objectSpread({}, restDish, {\n                                            SelectedSize: dishInMenu.rest_dish_size.DishSize_id,\n                                            count: dishInSI.Ammount,\n                                            name: restDish.DishName,\n                                            price: dishInMenu.DishPrice,\n                                            totalPrice: dishInSI.ScheduleItemPrice\n                                          });\n                                        });\n                                      });\n\n                                    case 2:\n                                      return _context.abrupt(\"return\", _context.sent);\n\n                                    case 3:\n                                    case \"end\":\n                                      return _context.stop();\n                                  }\n                                }\n                              }, _callee, this);\n                            }));\n\n                            return function (_x3) {\n                              return _ref3.apply(this, arguments);\n                            };\n                          }()));\n\n                        case 2:\n                          dishes = _context2.sent;\n                          end = new Date(si.ScheduleItemDateTime);\n                          end.setHours(end.getHours() + 1);\n                          event = {\n                            ScheduleItem_id: si.id,\n                            restaurant_id: si.Restaurant_id,\n                            title: si.restaurant.RestaurantName,\n                            start: new Date(si.ScheduleItemDateTime),\n                            end: end,\n                            TotalPrice: si.ScheduleItemTotalPrice,\n                            dishes: dishes\n                          };\n                          if (si.Address_id) event.address_id = si.Address_id;\n                          return _context2.abrupt(\"return\", event);\n\n                        case 8:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, this);\n                }));\n\n                return function (_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()));\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\nexport var createEvent = function createEvent(event) {\n  return createScheduleItem({\n    Cust_id: client.get(\"user\").id,\n    Restaurant_id: event.restaurant_id,\n    ItemStatus_id: 1,\n    Address_id: event.address_id ? event.address_id : 0,\n    ScheduleItemDateTime: event.start,\n    ScheduleItemTotalPrice: event.TotalPrice\n  }).then(function (si) {\n    if (event.dishes) {\n      event.dishes.forEach(\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee4(dish) {\n          var sizeIdx, RestDishSize_id;\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  sizeIdx = dish.dish_sizes.findIndex(function (size) {\n                    return R.equals(size.id.toString(), dish.SelectedSize.toString());\n                  });\n                  RestDishSize_id = dish.dish_sizes[sizeIdx].rest_dish_sizes.id;\n                  _context4.next = 4;\n                  return client.service(\"dishes-in-menu\").findOne({\n                    query: {\n                      RestDishSize_id: RestDishSize_id\n                    }\n                  }).then(function (dish) {\n                    return dish.id;\n                  }).then(function (dishInMenuId) {\n                    createDishesInScheduleItem({\n                      Dish_id: dishInMenuId,\n                      ScheduleItem_id: si.id,\n                      Ammount: dish.count,\n                      ScheduleItemPrice: dish.totalPrice\n                    });\n                  }).then(function () {\n                    return calendarStore.setBadge(_this.getEventsNumber);\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n    }\n\n    return si;\n  });\n};\nexport var deleteEvent = function deleteEvent(eventId) {\n  return client.service(\"schedule-items\").remove(eventId);\n};\nexport var createScheduleItem = function createScheduleItem(scheduleItem) {\n  return client.service(\"schedule-items\").create(scheduleItem);\n};\nexport var createDishesInScheduleItem = function createDishesInScheduleItem(dishInItem) {\n  return client.service(\"dishes-in-schedule-item\").create(dishInItem);\n};\nexport var getScheduleItemsByCustId = function getScheduleItemsByCustId(Cust_id) {\n  return client.service(\"schedule-items\").find({\n    query: {\n      Cust_id: Cust_id\n    }\n  }).then(function (res) {\n    return res.data;\n  });\n};","map":{"version":3,"sources":["H:\\I3IV\\Dyplom\\src\\node_modules\\api\\schedule-items.js"],"names":["client","getDish","R","calendarStore","getEventsNumber","service","find","query","Cust_id","get","id","then","res","data","length","getEvents","getScheduleItemsByCustId","scheduleItems","Promise","all","map","si","dishes_in_schedule_items","dishInSI","findOne","MenuDish_id","Dish_id","dishInMenu","rest_dish_size","RestaurantDish_id","restDish","SelectedSize","DishSize_id","count","Ammount","name","DishName","price","DishPrice","totalPrice","ScheduleItemPrice","dishes","end","Date","ScheduleItemDateTime","setHours","getHours","event","ScheduleItem_id","restaurant_id","Restaurant_id","title","restaurant","RestaurantName","start","TotalPrice","ScheduleItemTotalPrice","Address_id","address_id","createEvent","createScheduleItem","ItemStatus_id","forEach","dish","sizeIdx","dish_sizes","findIndex","size","equals","toString","RestDishSize_id","rest_dish_sizes","dishInMenuId","createDishesInScheduleItem","setBadge","deleteEvent","eventId","remove","scheduleItem","create","dishInItem"],"mappings":"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","sourcesContent":["import client from \"feathers/client\";\r\nimport { getDish } from \"api\";\r\nimport * as R from \"ramda\";\r\nimport { calendarStore} from \"store\";\r\n\r\nexport const getEventsNumber = () =>\r\n  client\r\n    .service(\"schedule-items\")\r\n    .find({ query: { Cust_id: client.get(\"user\").id } })\r\n    .then(res => res.data.length);\r\n\r\nexport const getEvents = () =>\r\n  getScheduleItemsByCustId(client.get(\"user\").id).then(\r\n    async scheduleItems =>\r\n      await Promise.all(\r\n        scheduleItems.map(async si => {\r\n          const dishes = await Promise.all(\r\n            si.dishes_in_schedule_items.map(\r\n              async dishInSI =>\r\n                await client\r\n                  .service(\"dishes-in-menu\")\r\n                  .findOne({ query: { MenuDish_id: dishInSI.Dish_id } })\r\n                  .then(dishInMenu =>\r\n                    getDish(dishInMenu.rest_dish_size.RestaurantDish_id).then(\r\n                      restDish => ({\r\n                        ...restDish,\r\n                        SelectedSize: dishInMenu.rest_dish_size.DishSize_id,\r\n                        count: dishInSI.Ammount,\r\n                        name: restDish.DishName,\r\n                        price: dishInMenu.DishPrice,\r\n                        totalPrice: dishInSI.ScheduleItemPrice\r\n                      })\r\n                    )\r\n                  )\r\n            )\r\n          );\r\n          const end = new Date(si.ScheduleItemDateTime);\r\n          end.setHours(end.getHours() + 1);\r\n          const event = {\r\n            ScheduleItem_id: si.id,\r\n            restaurant_id: si.Restaurant_id,\r\n            title: si.restaurant.RestaurantName,\r\n            start: new Date(si.ScheduleItemDateTime),\r\n            end,\r\n            TotalPrice: si.ScheduleItemTotalPrice,\r\n            dishes\r\n          };\r\n          if (si.Address_id) event.address_id = si.Address_id;\r\n          return event;\r\n        })\r\n      )\r\n  );\r\n\r\nexport const createEvent = event =>\r\n  createScheduleItem({\r\n    Cust_id: client.get(\"user\").id,\r\n    Restaurant_id: event.restaurant_id,\r\n    ItemStatus_id: 1,\r\n    Address_id: event.address_id ? event.address_id : 0,\r\n    ScheduleItemDateTime: event.start,\r\n    ScheduleItemTotalPrice: event.TotalPrice\r\n  }).then(si => {\r\n    if (event.dishes) {\r\n      event.dishes.forEach(async dish => {\r\n        const sizeIdx = dish.dish_sizes.findIndex(size =>\r\n          R.equals(size.id.toString(), dish.SelectedSize.toString())\r\n        );\r\n        const RestDishSize_id = dish.dish_sizes[sizeIdx].rest_dish_sizes.id;\r\n        await client\r\n          .service(\"dishes-in-menu\")\r\n          .findOne({ query: { RestDishSize_id } })\r\n          .then(dish => dish.id)\r\n          .then(dishInMenuId => {\r\n            createDishesInScheduleItem({\r\n              Dish_id: dishInMenuId,\r\n              ScheduleItem_id: si.id,\r\n              Ammount: dish.count,\r\n              ScheduleItemPrice: dish.totalPrice\r\n            });\r\n          })\r\n            .then(() => calendarStore.setBadge(this.getEventsNumber));\r\n      });\r\n    }\r\n    return si;\r\n  });\r\n\r\nexport const deleteEvent = eventId =>\r\n  client.service(\"schedule-items\").remove(eventId);\r\n\r\nexport const createScheduleItem = scheduleItem =>\r\n  client.service(\"schedule-items\").create(scheduleItem);\r\n\r\nexport const createDishesInScheduleItem = dishInItem =>\r\n  client.service(\"dishes-in-schedule-item\").create(dishInItem);\r\n\r\nexport const getScheduleItemsByCustId = Cust_id =>\r\n  client\r\n    .service(\"schedule-items\")\r\n    .find({ query: { Cust_id } })\r\n    .then(res => res.data);\r\n"]},"metadata":{},"sourceType":"module"}