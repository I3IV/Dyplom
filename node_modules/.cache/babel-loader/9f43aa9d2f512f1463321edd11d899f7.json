{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Studia\\\\React\\\\I3IV\\\\Dyplom\\\\src\\\\node_modules\\\\components-illia\\\\pages\\\\registration-page\\\\registration-form\\\\registration-form.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport \"../registration-page.css\";\nimport client from \"feathers/client\";\nimport { Redirect } from \"react-router-dom\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Spinner from \"shared-components/spinner\";\nvar strongRegexPass = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\nvar strongRegexNameSurname = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])\");\nvar strongRegexPhone = new RegExp(\"^(\\\\+(([0-9]){1,2})[-.])?((((([0-9]){2,3})[-.]){1,2}([0-9]{4,10}))|([0-9]{9}))$\");\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegistrationForm, _Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoggedIn: false,\n      email: \"\",\n      name: \"\",\n      surname: \"\",\n      phone: \"\",\n      password: \"\",\n      passwordpass: \"\"\n    };\n\n    _this.updateField = function (ev) {\n      _this.setState(_defineProperty({}, ev.target.name, ev.target.value));\n    };\n\n    _this.handleSubmit = function () {\n      _this.signup();\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ValidatorForm.addValidationRule(\"password\", function (value) {\n        return strongRegexPass.test(value);\n      });\n      ValidatorForm.addValidationRule(\"name\", function (value) {\n        return strongRegexNameSurname.test(value);\n      });\n      ValidatorForm.addValidationRule(\"surname\", function (value) {\n        return strongRegexNameSurname.test(value);\n      });\n      ValidatorForm.addValidationRule(\"phone\", function (value) {\n        return strongRegexPhone.test(value);\n      });\n      ValidatorForm.addValidationRule(\"isPasswordMatch\", function (value) {\n        if (value !== _this2.state.password) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var _this$state, email, password;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$state = this.state, email = _this$state.email, password = _this$state.password;\n                _context.next = 3;\n                return client.authenticate({\n                  strategy: \"local\",\n                  email: email,\n                  password: password\n                }).then(function () {\n                  client.set(\"user\", _this3.state.user);\n                }).then(function () {\n                  _this3.setState({\n                    error: null,\n                    isLoggedIn: true,\n                    loading: false\n                  });\n                }).catch(function (error) {\n                  _this3.setState({\n                    error: error,\n                    loading: false\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function login() {\n        return _login.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"signup\",\n    value: function signup() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          name = _this$state2.name,\n          surname = _this$state2.surname,\n          phone = _this$state2.phone;\n      this.setState({\n        loading: true\n      });\n      var user = {\n        email: email,\n        password: password,\n        CustName: name,\n        CustSurname: surname,\n        CustPhone: phone,\n        City_id: 1\n      };\n      this.setState({\n        user: user\n      });\n      return client.service(\"customers\").create(user).then(function () {\n        return _this4.login();\n      }).catch(function (error) {\n        _this4.setState({\n          error: error,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      //this.state.error && console.log(\"ERROR\", this.state.error.errors);\n      if (this.state.error) console.log(\"Something wrong: \".concat(this.state.error));\n      if (this.state.loading) return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n      if (!this.state.loading && this.state.isLoggedIn) return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        onError: function onError(errors) {\n          return console.log(errors);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"paper-form\",\n        elevation: 15,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Registration\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.error && \"Something wrong: \".concat(this.state.error)), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        className: \"input\",\n        label: \"Name\",\n        value: this.state.name,\n        name: \"name\",\n        type: \"name\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        placeholder: \"Name\",\n        validators: [\"name\", \"required\"],\n        errorMessages: [\"The name must contain lowercase and uppercase\", \"Name is required\"],\n        onChange: this.updateField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"br\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(TextValidator, {\n        className: \"input\",\n        label: \"Surname\",\n        type: \"Surname\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.surname,\n        name: \"surname\",\n        placeholder: \"Surname\",\n        validators: [\"surname\", \"required\"],\n        errorMessages: [\"The surname must contain lowercase and uppercase\", \"Surname is required\"],\n        onChange: this.updateField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        className: \"input\",\n        label: \"Email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.email,\n        name: \"email\",\n        placeholder: \"example@domain.com\",\n        validators: [\"required\", \"isEmail\"],\n        errorMessages: [\"The email is required\", \"Email is not valid\"],\n        onChange: this.updateField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"br\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(TextValidator, {\n        className: \"input\",\n        label: \"Phone Number\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.phone,\n        name: \"phone\",\n        type: \"phone\",\n        validators: [\"phone\", \"required\"],\n        errorMessages: [\"The phone must contain only numbers\", \"Phone is required\"],\n        placeholder: \"+48 888 888 888\",\n        onChange: this.updateField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        className: \"input\",\n        label: \"Password\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.password,\n        name: \"password\",\n        type: \"password\",\n        validators: [\"password\", \"required\"],\n        errorMessages: [\"The password must contain lowercase, uppercase number\", \"Password is required\"],\n        placeholder: \"Password\",\n        onChange: this.updateField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"br\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(TextValidator, {\n        className: \"input\",\n        label: \"Confirm Password\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: this.state.passwordpass,\n        name: \"passwordpass\",\n        type: \"password\",\n        validators: [\"isPasswordMatch\", \"required\"],\n        errorMessages: [\"password mismatch\", \"this field is required\"],\n        placeholder: \"Confirm password\",\n        onChange: this.updateField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button\",\n        type: \"submit\",\n        onClick: function onClick() {\n          _this5.signup();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Create account\"), React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Already have one?\")))));\n    }\n  }]);\n\n  return RegistrationForm;\n}(Component);\n\nexport default RegistrationForm;","map":{"version":3,"sources":["D:\\Studia\\React\\I3IV\\Dyplom\\src\\node_modules\\components-illia\\pages\\registration-page\\registration-form\\registration-form.js"],"names":["React","Component","Link","Paper","Button","client","Redirect","ValidatorForm","TextValidator","Spinner","strongRegexPass","RegExp","strongRegexNameSurname","strongRegexPhone","RegistrationForm","state","isLoggedIn","email","name","surname","phone","password","passwordpass","updateField","ev","setState","target","value","handleSubmit","signup","addValidationRule","test","authenticate","strategy","then","set","user","error","loading","catch","CustName","CustSurname","CustPhone","City_id","service","create","login","console","log","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport \"../registration-page.css\";\nimport client from \"feathers/client\";\nimport { Redirect } from \"react-router-dom\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport Spinner from \"shared-components/spinner\";\n\nconst strongRegexPass = new RegExp(\n  \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\"\n);\nconst strongRegexNameSurname = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])\");\nconst strongRegexPhone = new RegExp(\n  \"^(\\\\+(([0-9]){1,2})[-.])?((((([0-9]){2,3})[-.]){1,2}([0-9]{4,10}))|([0-9]{9}))$\"\n);\n\nclass RegistrationForm extends Component {\n  state = {\n    isLoggedIn: false,\n    email: \"\",\n    name: \"\",\n    surname: \"\",\n    phone: \"\",\n    password: \"\",\n    passwordpass: \"\"\n  };\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"password\", value =>\n      strongRegexPass.test(value)\n    );\n\n    ValidatorForm.addValidationRule(\"name\", value =>\n      strongRegexNameSurname.test(value)\n    );\n\n    ValidatorForm.addValidationRule(\"surname\", value =>\n      strongRegexNameSurname.test(value)\n    );\n\n    ValidatorForm.addValidationRule(\"phone\", value =>\n      strongRegexPhone.test(value)\n    );\n\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\n      if (value !== this.state.password) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  async login() {\n    const { email, password } = this.state;\n    await client\n      .authenticate({\n        strategy: \"local\",\n        email,\n        password\n      })\n      .then(() => {\n        client.set(\"user\", this.state.user);\n      })\n      .then(() => {\n        this.setState({ error: null, isLoggedIn: true, loading: false });\n      })\n      .catch(error => {\n        this.setState({ error, loading: false });\n      });\n  }\n\n  signup() {\n    const { email, password, name, surname, phone } = this.state;\n    this.setState({ loading: true });\n    const user = {\n      email,\n      password,\n      CustName: name,\n      CustSurname: surname,\n      CustPhone: phone,\n      City_id: 1\n    };\n    this.setState({\n      user\n    });\n    return client\n      .service(\"customers\")\n      .create(user)\n      .then(() => this.login())\n      .catch(error => {\n        this.setState({ error, loading: false });\n      });\n  }\n\n  updateField = ev => {\n    this.setState({ [ev.target.name]: ev.target.value });\n  };\n\n  handleSubmit = () => {\n    this.signup();\n  };\n\n  render() {\n    //this.state.error && console.log(\"ERROR\", this.state.error.errors);\n    if (this.state.error) console.log(`Something wrong: ${this.state.error}`);\n    if (this.state.loading) return <Spinner />;\n    if (!this.state.loading && this.state.isLoggedIn)\n      return <Redirect to=\"/\" />;\n    return (\n      <div className=\"form\">\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => console.log(errors)}\n        >\n          <Paper className=\"paper-form\" elevation={15}>\n            <span className=\"label\">Registration</span>\n            <p>{this.state.error && `Something wrong: ${this.state.error}`}</p>\n            <div className=\"row\">\n              <TextValidator\n                className=\"input\"\n                label=\"Name\"\n                value={this.state.name}\n                name=\"name\"\n                type=\"name\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                placeholder=\"Name\"\n                validators={[\"name\", \"required\"]}\n                errorMessages={[\n                  \"The name must contain lowercase and uppercase\",\n                  \"Name is required\"\n                ]}\n                onChange={this.updateField}\n              />\n              <span className=\"br\" />\n              <TextValidator\n                className=\"input\"\n                label=\"Surname\"\n                type=\"Surname\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.surname}\n                name=\"surname\"\n                placeholder=\"Surname\"\n                validators={[\"surname\", \"required\"]}\n                errorMessages={[\n                  \"The surname must contain lowercase and uppercase\",\n                  \"Surname is required\"\n                ]}\n                onChange={this.updateField}\n              />\n            </div>\n            <div className=\"row\">\n              <TextValidator\n                className=\"input\"\n                label=\"Email\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.email}\n                name=\"email\"\n                placeholder=\"example@domain.com\"\n                validators={[\"required\", \"isEmail\"]}\n                errorMessages={[\"The email is required\", \"Email is not valid\"]}\n                onChange={this.updateField}\n              />\n              <span className=\"br\" />\n              <TextValidator\n                className=\"input\"\n                label=\"Phone Number\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.phone}\n                name=\"phone\"\n                type=\"phone\"\n                validators={[\"phone\", \"required\"]}\n                errorMessages={[\n                  \"The phone must contain only numbers\",\n                  \"Phone is required\"\n                ]}\n                placeholder=\"+48 888 888 888\"\n                onChange={this.updateField}\n              />\n            </div>\n            <div className=\"row\">\n              <TextValidator\n                className=\"input\"\n                label=\"Password\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.password}\n                name=\"password\"\n                type=\"password\"\n                validators={[\"password\", \"required\"]}\n                errorMessages={[\n                  \"The password must contain lowercase, uppercase number\",\n                  \"Password is required\"\n                ]}\n                placeholder=\"Password\"\n                onChange={this.updateField}\n              />\n              <span className=\"br\" />\n              <TextValidator\n                className=\"input\"\n                label=\"Confirm Password\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                value={this.state.passwordpass}\n                name=\"passwordpass\"\n                type=\"password\"\n                validators={[\"isPasswordMatch\", \"required\"]}\n                errorMessages={[\"password mismatch\", \"this field is required\"]}\n                placeholder=\"Confirm password\"\n                onChange={this.updateField}\n              />\n            </div>\n            <div className=\"buttons\">\n              <Button\n                className=\"button\"\n                type=\"submit\"\n                onClick={() => {\n                  this.signup();\n                }}\n              >\n                Create account\n              </Button>\n              <Link to=\"/login\">Already have one?</Link>\n            </div>\n          </Paper>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default RegistrationForm;\n"]},"metadata":{},"sourceType":"module"}