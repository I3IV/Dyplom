import React, { Component } from "react";

import Paper from "@material-ui/core/Paper";
import "../account-page.css";
import ExpandMoreIcon from "@material-ui/icons/ExpandMore";
import {
  Button,
  ExpansionPanel,
  ExpansionPanelDetails,
  ExpansionPanelSummary,
  TextField,
  Typography
} from "@material-ui/core";

export default class AccountStatistics extends Component {
  state = {
    address1: {
      city: "",
      street: "",
      zip: "",
      country: ""
    },
    address2: {
      city: "",
      street: "",
      zip: "",
      country: ""
    },
    address3: {
      city: "",
      street: "",
      zip: "",
      country: ""
    },
    expanded: null
  };
  updateAddress = (address) => {
    console.log(this.state[address]);
  };
  handleChange = panel => (event, expanded) => {
    this.setState({
      expanded: expanded ? panel : false
    });
  };

  render() {
    return (
        <Paper className="addresses" elevation={15}>
        <ExpansionPanel
          expanded={this.state.expanded === "address1"}
          onChange={this.handleChange("address1")}
        >
          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>
            <div className="summary">
              <Typography>Address 1</Typography>
              <Button className="button" onClick={() => this.updateAddress('address1')}>
                Save
              </Button>
            </div>
          </ExpansionPanelSummary>
          <ExpansionPanelDetails className="details">
            <div className="address-form ">
              <TextField
                className="input"
                label="City"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address1.city}
                onChange={e =>
                  this.setState({
                    address1: { ...this.state.address1, city: e.target.value }
                  })
                }
              />
              <TextField
                className="input"
                label="Street"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address1.street}
                onChange={e =>
                  this.setState({
                    address1: { ...this.state.address1, street: e.target.value }
                  })
                }
              />
              <TextField
                className="input"
                label="Zip"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address1.zip}
                onChange={e =>
                  this.setState({
                    address1: { ...this.state.address1, zip: e.target.value }
                  })
                }
              />
              <TextField
                className="input"
                label="Country"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address1.country}
                onChange={e =>
                  this.setState({
                    address1: { ...this.state.address1, country: e.target.value }
                  })
                }
              />
            </div>
          </ExpansionPanelDetails>
        </ExpansionPanel>
        <ExpansionPanel
          expanded={this.state.expanded === "address2"}
          onChange={this.handleChange("address2")}
        >
          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>
            <div className="summary">
              <Typography>Address 2</Typography>
                <Button className="button" onClick={() => this.updateAddress('address2')}>
                Save
              </Button>
            </div>
          </ExpansionPanelSummary>
          <ExpansionPanelDetails className="details">
            <div className="address-form">
              <TextField
                className="input"
                label="City"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address2.city}
                onChange={e =>
                  this.setState({
                    address2: { ...this.state.address2, city: e.target.value }
                  })
                }
              />
              <TextField
                className="input"
                label="Street"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address2.street}
                onChange={e =>
                  this.setState({
                    address2: { ...this.state.address2, street: e.target.value }
                  })
                }
              />
              <TextField
                className="input"
                label="Zip"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address2.zip}
                onChange={e =>
                  this.setState({
                    address2: { ...this.state.address2, zip: e.target.value }
                  })
                }
              />
              <TextField
                className="input"
                label="Country"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address2.country}
                onChange={e =>
                  this.setState({
                    address2: { ...this.state.address2, country: e.target.value }
                  })
                }
              />
            </div>
          </ExpansionPanelDetails>
        </ExpansionPanel>
        <ExpansionPanel
          expanded={this.state.expanded === "address3"}
          onChange={this.handleChange("address3")}
        >
          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>
            <div className="summary">
              <Typography>Address 3</Typography>
                <Button className="button" onClick={() => this.updateAddress('address3')}>
                Save
              </Button>
            </div>
          </ExpansionPanelSummary>
          <ExpansionPanelDetails className="details">
            <div className="address-form">
              <TextField
                className="input"
                label="City"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address3.city}
                onChange={e =>
                  this.setState({
                    address3: { ...this.state.address3, city: e.target.value }
                  })
                }
              />
              <TextField
                className="input"
                label="Street"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address3.street}
                onChange={e =>
                  this.setState({
                    address3: { ...this.state.address3, street: e.target.value }
                  })
                }
              />
              <TextField
                className="input"
                label="Zip"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address3.zip}
                onChange={e =>
                  this.setState({
                    address3: { ...this.state.address3, zip: e.target.value }
                  })
                }
              />
              <TextField
                className="input"
                label="Country"
                margin="normal"
                variant="outlined"
                type="text"
                value={this.state.address3.country}
                onChange={e =>
                  this.setState({
                    address3: { ...this.state.address3, country: e.target.value }
                  })
                }
              />
            </div>
          </ExpansionPanelDetails>
        </ExpansionPanel>
        </Paper>
    );
  }
}
