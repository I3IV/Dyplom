import React, { Component } from "react";

import Paper from "@material-ui/core/Paper";
import "../account-page.css";
import ExpandMoreIcon from "@material-ui/icons/ExpandMore";
import {
  Button,
  ExpansionPanel,
  ExpansionPanelDetails,
  ExpansionPanelSummary,
  TextField,
  Typography
} from "@material-ui/core";
import client from "feathers/client";
import { getCustomerDeliveryAddresses } from "api";
import Spinner from "shared-components/spinner";

export default class AccountStatistics extends Component {
  constructor() {
    super();

    getCustomerDeliveryAddresses()
      .then(response => {
        let n = 1;
        for (let item of response) {
          const { id, City_id, ...address } = item;
          this.setState({ [`address${n}`]: address });
          n++;
        }
      })
      .then(() => console.log(this.state))
      .then(() => this.setState({ loading: false }));
    this.state = {
      expanded: null,
      loading: true
    };
  }
  updateAddress = address => {
    console.log(this.state);
    //newAddress1, newAddress2, newAddress3
  };
  handleChange = panel => (event, expanded) => {
    this.setState({
      expanded: expanded ? panel : false
    });
  };

  render() {
    if (this.state.loading) {
      return <Spinner />;
    }
    return (
      <Paper className="addresses" elevation={15}>
        {this.state.address1 && (
          <ExpansionPanel
            expanded={this.state.expanded === "address1"}
            onChange={this.handleChange("address1")}
          >
            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>
              <div className="summary">
                <Typography>
                  {this.state.address1.CityName},{" "}
                  {this.state.address1.StreetName}{" "}
                  {this.state.address1.StreetNumber},{" "}
                  {this.state.address1.ZipCode}
                </Typography>
                {this.state.newAddress1 && (
                  <Button
                    variant="outlined"
                    className="button"
                    onClick={() => this.updateAddress("address1")}
                    color="primary"
                  >
                    Save
                  </Button>
                )}
              </div>
            </ExpansionPanelSummary>
            <ExpansionPanelDetails className="details">
              <div className="address-form ">
                <TextField
                  className="input"
                  label="City"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress1 && this.state.newAddress1.CityName
                      ? this.state.newAddress1.CityName
                      : this.state.address1.CityName
                  }
                  onChange={e =>
                    this.setState({
                      newAddress1: {
                        ...this.state.newAddress1,
                        CityName: e.target.value
                      }
                    })
                  }
                />
                <TextField
                  className="input"
                  label="Street"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress1 && this.state.newAddress1.StreetName
                      ? this.state.newAddress1.StreetName
                      : this.state.address1.StreetName
                  }
                  onChange={e =>
                    this.setState({
                      newAddress1: {
                        ...this.state.newAddress1,
                        StreetName: e.target.value
                      }
                    })
                  }
                />
                <TextField
                  className="input"
                  label="Zip"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress1 && this.state.newAddress1.ZipCode
                      ? this.state.newAddress1.ZipCode
                      : this.state.address1.ZipCode
                  }
                  onChange={e =>
                    this.setState({
                      newAddress1: {
                        ...this.state.newAddress1,
                        ZipCode: e.target.value
                      }
                    })
                  }
                />
                <TextField
                  className="input"
                  label="Building"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress1 &&
                    this.state.newAddress1.StreetNumber
                      ? this.state.newAddress1.StreetNumber
                      : this.state.address1.StreetNumber
                  }
                  onChange={e =>
                    this.setState({
                      newAddress1: {
                        ...this.state.newAddress1,
                        StreetNumber: e.target.value
                      }
                    })
                  }
                />
              </div>
            </ExpansionPanelDetails>
          </ExpansionPanel>
        )}
        {this.state.address2 && (
          <ExpansionPanel
            expanded={this.state.expanded === "address2"}
            onChange={this.handleChange("address2")}
          >
            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>
              <div className="summary">
                <Typography>
                  {this.state.address2.CityName},{" "}
                  {this.state.address2.StreetName}{" "}
                  {this.state.address2.StreetNumber},{" "}
                  {this.state.address2.ZipCode}
                </Typography>
                {this.state.newAddress2 && (
                  <Button
                    variant="outlined"
                    className="button"
                    onClick={() => this.updateAddress("address2")}
                    color="primary"
                  >
                    Save
                  </Button>
                )}
              </div>
            </ExpansionPanelSummary>
            <ExpansionPanelDetails className="details">
              <div className="address-form ">
                <TextField
                  className="input"
                  label="City"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress2 && this.state.newAddress2.CityName
                      ? this.state.newAddress2.CityName
                      : this.state.address2.CityName
                  }
                  onChange={e =>
                    this.setState({
                      newAddress2: {
                        ...this.state.newAddress2,
                        CityName: e.target.value
                      }
                    })
                  }
                />
                <TextField
                  className="input"
                  label="Street"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress2 && this.state.newAddress2.StreetName
                      ? this.state.newAddress2.StreetName
                      : this.state.address2.StreetName
                  }
                  onChange={e =>
                    this.setState({
                      newAddress2: {
                        ...this.state.newAddress2,
                        StreetName: e.target.value
                      }
                    })
                  }
                />
                <TextField
                  className="input"
                  label="Zip"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress2 && this.state.newAddress2.ZipCode
                      ? this.state.newAddress2.ZipCode
                      : this.state.address2.ZipCode
                  }
                  onChange={e =>
                    this.setState({
                      newAddress2: {
                        ...this.state.newAddress2,
                        ZipCode: e.target.value
                      }
                    })
                  }
                />
                <TextField
                  className="input"
                  label="Building"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress2 &&
                    this.state.newAddress2.StreetNumber
                      ? this.state.newAddress2.StreetNumber
                      : this.state.address2.StreetNumber
                  }
                  onChange={e =>
                    this.setState({
                      newAddress2: {
                        ...this.state.newAddress2,
                        StreetNumber: e.target.value
                      }
                    })
                  }
                />
              </div>
            </ExpansionPanelDetails>
          </ExpansionPanel>
        )}
        {this.state.address3 && (
          <ExpansionPanel
            expanded={this.state.expanded === "address3"}
            onChange={this.handleChange("address3")}
          >
            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>
              <div className="summary">
                <Typography>
                  {this.state.address3.CityName},{" "}
                  {this.state.address3.StreetName}{" "}
                  {this.state.address3.StreetNumber},{" "}
                  {this.state.address3.ZipCode}
                </Typography>

                {this.state.newAddress3 && (
                  <Button
                    variant="outlined"
                    className="button"
                    onClick={() => this.updateAddress("address3")}
                    color="primary"
                  >
                    Save
                  </Button>
                )}
              </div>
            </ExpansionPanelSummary>
            <ExpansionPanelDetails className="details">
              <div className="address-form ">
                <TextField
                  className="input"
                  label="City"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress3 && this.state.newAddress3.CityName
                      ? this.state.newAddress3.CityName
                      : this.state.address3.CityName
                  }
                  onChange={e =>
                    this.setState({
                      newAddress3: {
                        ...this.state.newAddress3,
                        CityName: e.target.value
                      }
                    })
                  }
                />
                <TextField
                  className="input"
                  label="Street"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress3 && this.state.newAddress3.StreetName
                      ? this.state.newAddress3.StreetName
                      : this.state.address3.StreetName
                  }
                  onChange={e =>
                    this.setState({
                      newAddress3: {
                        ...this.state.newAddress3,
                        StreetName: e.target.value
                      }
                    })
                  }
                />
                <TextField
                  className="input"
                  label="Zip"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress3 && this.state.newAddress3.ZipCode
                      ? this.state.newAddress3.ZipCode
                      : this.state.address3.ZipCode
                  }
                  onChange={e =>
                    this.setState({
                      newAddress3: {
                        ...this.state.newAddress3,
                        ZipCode: e.target.value
                      }
                    })
                  }
                />
                <TextField
                  className="input"
                  label="Building"
                  margin="normal"
                  variant="outlined"
                  type="text"
                  value={
                    this.state.newAddress3 &&
                    this.state.newAddress3.StreetNumber
                      ? this.state.newAddress3.StreetNumber
                      : this.state.address3.StreetNumber
                  }
                  onChange={e =>
                    this.setState({
                      newAddress3: {
                        ...this.state.newAddress3,
                        StreetNumber: e.target.value
                      }
                    })
                  }
                />
              </div>
            </ExpansionPanelDetails>
          </ExpansionPanel>
        )}
      </Paper>
    );
  }
}
