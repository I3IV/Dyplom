{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\React\\\\Tmp\\\\restaurant\\\\src\\\\node_modules\\\\components\\\\grid-list-item-dish\\\\index.js\";\nimport React from 'react';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport PropTypes from 'prop-types';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport * as R from 'ramda';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport './grid-list-item.css';\nvar theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FAFAFA'\n    },\n    secondary: {\n      main: '#212121'\n    } // This is just green.A700 as hex.\n\n  }\n});\n\nvar styles = function styles(theme) {\n  return createStyles({\n    button: {\n      margin: theme.spacing.unit,\n      borderColor: 'white'\n    },\n    tileBar: {\n      height: \"auto\"\n    },\n    priceBar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    extendedIcon: {\n      marginRight: theme.spacing.unit\n    }\n  });\n};\n\nvar GridListItem = function GridListItem(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      price = _ref.price,\n      description = _ref.description,\n      restaurant = _ref.restaurant,\n      classes = _ref.classes;\n  var shortDescription = \"\".concat(R.take(140, description)).concat(description.length > 140 ? '...' : '');\n  return React.createElement(\"div\", {\n    className: \"list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/images/dishes/\".concat(id, \".jpg\"),\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(GridListTileBar, {\n    className: classes.tileBar,\n    title: React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, restaurant)),\n    subtitle: React.createElement(\"div\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, shortDescription),\n    actionIcon: React.createElement(\"div\", {\n      className: classes.priceBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"\".concat(price, \"$ \")), React.createElement(Button, {\n      variant: \"outlined\",\n      \"aria-label\": \"Add\",\n      color: \"primary\",\n      className: classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Add\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nGridListItem.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(GridListItem);","map":{"version":3,"sources":["D:\\Studia\\React\\Tmp\\restaurant\\src\\node_modules\\components\\grid-list-item-dish\\index.js"],"names":["React","GridListTileBar","Button","AddIcon","PropTypes","withStyles","createStyles","Typography","R","ListSubheader","MuiThemeProvider","createMuiTheme","theme","palette","primary","main","secondary","styles","button","margin","spacing","unit","borderColor","tileBar","height","priceBar","display","alignItems","justifyContent","extendedIcon","marginRight","GridListItem","id","name","price","description","restaurant","classes","shortDescription","take","length","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles,createStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport * as R from 'ramda'\r\n\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport './grid-list-item.css'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n       main: '#FAFAFA',\r\n     },\r\n     secondary: {\r\n       main: '#212121',\r\n     }, // This is just green.A700 as hex.\r\n  },\r\n});\r\n\r\n\r\nconst styles = theme =>\r\ncreateStyles({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    borderColor: 'white'\r\n  },\r\n  tileBar: {\r\n    height: \"auto\"\r\n  },\r\n  priceBar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n});\r\n\r\n\r\n\r\nconst GridListItem = ({id, name, price, description, restaurant, classes}) => {\r\n\r\n  const shortDescription = `${R.take(140, description)}${description.length > 140 ? '...' : ''}` ;\r\n\r\n  return (\r\n  <div className='list-item'>\r\n    <img src={`/images/dishes/${id}.jpg`} alt={name} />\r\n    <MuiThemeProvider theme={theme}>\r\n          <GridListTileBar\r\n        className={classes.tileBar}\r\n        title={<div className=\"title\"><p>{name}</p><p>{restaurant}</p></div>}\r\n        subtitle={\r\n                  <div className=\"description\">\r\n                    {shortDescription}\r\n                  </div>\r\n\r\n                  }\r\n        actionIcon={\r\n          <div className={classes.priceBar}>\r\n            <Typography variant=\"subtitle1\" color=\"primary\">\r\n                {`${price}$ `}\r\n             </Typography>\r\n            <Button  variant=\"outlined\" aria-label=\"Add\" color=\"primary\" className={classes.button}>\r\n            Add\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n    </MuiThemeProvider>\r\n</div>\r\n  )\r\n}\r\n\r\nGridListItem.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nexport default withStyles(styles)(GridListItem);\r\n"]},"metadata":{},"sourceType":"module"}