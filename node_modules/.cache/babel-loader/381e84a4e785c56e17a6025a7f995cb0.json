{"ast":null,"code":"import _curry2 from './internal/_curry2';\nimport _dispatchable from './internal/_dispatchable';\nimport _xtap from './internal/_xtap';\n/**\r\n * Runs the given function with the supplied object, then returns the object.\r\n *\r\n * Acts as a transducer if a transformer is given as second parameter.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category Function\r\n * @sig (a -> *) -> a -> a\r\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\r\n * @param {*} x\r\n * @return {*} `x`.\r\n * @example\r\n *\r\n *      var sayX = x => console.log('x is ' + x);\r\n *      R.tap(sayX, 100); //=> 100\r\n *      // logs 'x is 100'\r\n * @symb R.tap(f, a) = a\r\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;","map":null,"metadata":{},"sourceType":"module"}