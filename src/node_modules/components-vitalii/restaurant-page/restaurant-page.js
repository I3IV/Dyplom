import React, { Component, Fragment } from "react";
import "./restaurant-page.css";
import { withRouter } from "react-router-dom";
import Spinner from "components/spinner";
import DishCategories from "components-vitalii/dish-categories";
import RestaurantView from "./restaurant-view";
import Header from "components/shared-components/header";
import {
  getRestaurant,
  getDishesByRestId,
  getDishCategoriesByRestId
} from "api";

class RestaurantPage extends Component {
  state = {
    openDish: false,
    dishToShow: {}
  };
  componentDidMount() {
    const restId = this.props.match.params.id;
    getRestaurant(restId).then(restaurant => {
      this.setState({ restaurant });
    });
    Promise.all([
      getDishCategoriesByRestId(restId),
      getDishesByRestId(restId)
    ]).then(res => {
      this.setState({
        categories: res[0],
        dishes: res[1],
        category_id: ""
      });
    });
  }
  onDishAddClick = dish => {
    this.setState({ dishToShow: dish });
    this.setState({ openDish: true });
  };
  handleDishClose = () => {
    this.setState({ openDish: false });
  };
  filterDishes = (dishes, category_id) => {
    if (!category_id || category_id === 0) return dishes;
    return dishes.filter(dish => dish.Category_id === category_id);
  };
  handleMenu = category_id => {
    this.setState({ category_id });
  };

  render() {
    const {
      restaurant,
      openDish,
      dishToShow,
      dishes,
      categories,
      category_id
    } = this.state;

    const dishesToShow = this.filterDishes(dishes, category_id);

    const MenuView = dishesToShow ? (
      <DishCategories
        categories={categories}
        dishes={dishesToShow}
        onDishAddClick={this.onDishAddClick}
        handleMenu={this.handleMenu}
      />
    ) : (
      <Spinner />
    );
    const content = restaurant ? (
      <RestaurantView
        data={{
          restaurant,
          openDish,
          dishToShow,
          MenuView,
          handleDishClose: this.handleDishClose,
          onDishAddClick: this.onDishAddClick
        }}
      />
    ) : (
      <Spinner />
    );

    return (
      <Fragment>
        <Header user={this.props.user} handleClose={this.props.handleClose}/>
        {content}
      </Fragment>
    );
  }
}
export default withRouter(RestaurantPage);
