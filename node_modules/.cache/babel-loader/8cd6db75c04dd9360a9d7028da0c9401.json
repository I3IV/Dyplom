{"ast":null,"code":"import _toConsumableArray from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"H:\\\\I3IV\\\\Dyplom\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as R from \"ramda\";\nimport { cartStore } from \"store\";\nvar dishProps = [\"name\", \"count\", \"sizes\", \"size_id\", \"defaultPhoto\", \"RestaurantName\", \"RestaurantDish_id\"];\nvar emptyCart = {\n  dishes: [],\n  totalPrice: 0\n};\nexport var getCart = function getCart() {\n  return JSON.parse(localStorage.getItem(\"cart\"));\n};\nexport var setCart = function setCart(value) {\n  localStorage.setItem(\"cart\", JSON.stringify(value));\n  cartStore.updateCart(JSON.stringify(value));\n};\n\nvar createNewCart = function createNewCart() {\n  setCart(emptyCart);\n  return emptyCart;\n};\n\nvar getSize = function getSize(d) {\n  return R.find(function (size) {\n    return d.size_id == size.id;\n  })(d.sizes);\n};\n\nvar countPrice = function countPrice(d) {\n  return getSize(d).price * d.count;\n};\n\nvar getDish = function getDish(d_id, dishes) {\n  return R.find(R.propEq(\"id\", d_id))(dishes);\n};\n\nexport var addDishToCart = function addDishToCart(dish) {\n  var cCart = getCart();\n  var cart = cCart ? cCart : createNewCart();\n  var propDish = R.pick(dishProps, dish);\n  var dishSize = getSize(propDish);\n  var newDishPrice = countPrice(propDish);\n  var oldDish = getDish(dishSize.DishInMenuId, cart.dishes);\n  var newDish = !oldDish ? _objectSpread({}, propDish, {\n    id: dishSize.DishInMenuId,\n    price: dishSize.price,\n    totalPrice: newDishPrice\n  }) : _objectSpread({}, oldDish, {\n    count: oldDish.count + propDish.count,\n    totalPrice: oldDish.totalPrice + newDishPrice\n  });\n  var newDishes = oldDish ? R.map(R.ifElse(R.propEq(\"id\", oldDish.id), function () {\n    return newDish;\n  }, function (item) {\n    return item;\n  }))(cart.dishes) : _toConsumableArray(cart.dishes).concat([newDish]);\n  setCart({\n    dishes: newDishes,\n    totalPrice: cart.totalPrice + newDishPrice\n  });\n};\n\nvar dishUpDown = function dishUpDown(id, dec) {\n  var oldCart = getCart();\n  var totalPrice = oldCart.totalPrice;\n  var addSub = !dec ? R.add : R.subtract;\n  var newDishes = R.map(R.ifElse(R.propEq(\"id\", id), function (dish) {\n    if (dish.count === 1 && dec) return dish;\n    totalPrice = addSub(totalPrice, dish.price);\n    return _objectSpread({}, dish, {\n      count: addSub(dish.count, 1),\n      totalPrice: addSub(dish.totalPrice, dish.price)\n    });\n  }, function (item) {\n    return item;\n  }))(oldCart.dishes);\n  setCart({\n    dishes: newDishes,\n    totalPrice: totalPrice\n  });\n};\n\nexport var dishUp = function dishUp(id) {\n  return dishUpDown(id, false);\n};\nexport var dishDown = function dishDown(id) {\n  return dishUpDown(id, true);\n};\nexport var dishDelete = function dishDelete(id) {\n  var oldCart = getCart();\n  var dish = getDish(id, oldCart.dishes);\n  setCart({\n    dishes: R.reject(R.eqProps(\"id\", dish), oldCart.dishes),\n    totalPrice: oldCart.totalPrice - dish.totalPrice\n  });\n};","map":{"version":3,"sources":["H:\\I3IV\\Dyplom\\src\\node_modules\\api\\shopping-cart.js"],"names":["R","cartStore","dishProps","emptyCart","dishes","totalPrice","getCart","JSON","parse","localStorage","getItem","setCart","value","setItem","stringify","updateCart","createNewCart","getSize","d","find","size","size_id","id","sizes","countPrice","price","count","getDish","d_id","propEq","addDishToCart","dish","cCart","cart","propDish","pick","dishSize","newDishPrice","oldDish","DishInMenuId","newDish","newDishes","map","ifElse","item","dishUpDown","dec","oldCart","addSub","add","subtract","dishUp","dishDown","dishDelete","reject","eqProps"],"mappings":"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","sourcesContent":["import * as R from \"ramda\";\r\nimport { cartStore } from \"store\";\r\n\r\nconst dishProps = [\r\n  \"name\",\r\n  \"count\",\r\n  \"sizes\",\r\n  \"size_id\",\r\n  \"defaultPhoto\",\r\n  \"RestaurantName\",\r\n  \"RestaurantDish_id\"\r\n];\r\nconst emptyCart = {\r\n  dishes: [],\r\n  totalPrice: 0\r\n};\r\n\r\nexport const getCart = () => JSON.parse(localStorage.getItem(\"cart\"));\r\n\r\nexport const setCart = value => {\r\n  localStorage.setItem(\"cart\", JSON.stringify(value));\r\n  cartStore.updateCart(JSON.stringify(value));\r\n};\r\n\r\nconst createNewCart = () => {\r\n  setCart(emptyCart);\r\n  return emptyCart;\r\n};\r\n\r\nconst getSize = d => R.find(size => d.size_id == size.id)(d.sizes);\r\n\r\nconst countPrice = d => getSize(d).price * d.count;\r\n\r\nconst getDish = (d_id, dishes) => R.find(R.propEq(\"id\", d_id))(dishes);\r\n\r\nexport const addDishToCart = dish => {\r\n  const cCart = getCart();\r\n  const cart = cCart ? cCart : createNewCart();\r\n  const propDish = R.pick(dishProps, dish);\r\n  const dishSize = getSize(propDish);\r\n  const newDishPrice = countPrice(propDish);\r\n  const oldDish = getDish(dishSize.DishInMenuId, cart.dishes);\r\n  const newDish = !oldDish\r\n    ? {\r\n        ...propDish,\r\n        id: dishSize.DishInMenuId,\r\n        price: dishSize.price,\r\n        totalPrice: newDishPrice\r\n      }\r\n    : {\r\n        ...oldDish,\r\n        count: oldDish.count + propDish.count,\r\n        totalPrice: oldDish.totalPrice + newDishPrice\r\n      };\r\n  const newDishes = oldDish\r\n    ? R.map(R.ifElse(R.propEq(\"id\", oldDish.id), () => newDish, item => item))(\r\n        cart.dishes\r\n      )\r\n    : [...cart.dishes, newDish];\r\n  setCart({ dishes: newDishes, totalPrice: cart.totalPrice + newDishPrice });\r\n};\r\n\r\nconst dishUpDown = (id, dec) => {\r\n  const oldCart = getCart();\r\n  let totalPrice = oldCart.totalPrice;\r\n  const addSub = !dec ? R.add : R.subtract;\r\n  const newDishes = R.map(\r\n    R.ifElse(\r\n      R.propEq(\"id\", id),\r\n      dish => {\r\n        if (dish.count === 1 && dec) return dish;\r\n        totalPrice = addSub(totalPrice, dish.price);\r\n        return {\r\n          ...dish,\r\n          count: addSub(dish.count, 1),\r\n          totalPrice: addSub(dish.totalPrice, dish.price)\r\n        };\r\n      },\r\n      item => item\r\n    )\r\n  )(oldCart.dishes);\r\n  setCart({ dishes: newDishes, totalPrice });\r\n};\r\n\r\nexport const dishUp = id => dishUpDown(id, false);\r\nexport const dishDown = id => dishUpDown(id, true);\r\nexport const dishDelete = id => {\r\n  const oldCart = getCart();\r\n  const dish = getDish(id, oldCart.dishes);\r\n  setCart({\r\n    dishes: R.reject(R.eqProps(\"id\", dish), oldCart.dishes),\r\n    totalPrice: oldCart.totalPrice - dish.totalPrice\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}