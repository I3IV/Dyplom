{"ast":null,"code":"import _curry2 from './internal/_curry2';\nimport map from './map';\nimport prop from './prop';\n/**\r\n * Returns a new list by plucking the same named property off all objects in\r\n * the list supplied.\r\n *\r\n * `pluck` will work on\r\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\r\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Functor f => k -> f {k: v} -> f v\r\n * @param {Number|String} key The key name to pluck off of each object.\r\n * @param {Array} f The array or functor to consider.\r\n * @return {Array} The list of values for the given key.\r\n * @see R.props\r\n * @example\r\n *\r\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\r\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\r\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\r\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\r\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\r\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;","map":null,"metadata":{},"sourceType":"module"}