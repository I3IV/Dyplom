{"ast":null,"code":"import cities from \"./mock-cities\";\nimport countries from \"./mock-countries\";\nimport cuisines from \"./mock-cuisines\";\nimport dishes from \"./mock-dishes\";\nimport dishCategories from \"./mock-dish-categories\";\nimport dishSizes from \"./mock-dish-sizes\";\nimport restaurants from \"./mock-restaurants\";\nimport seats from \"./mock-seats\";\nimport products from \"./mock-products\";\nimport addresses from \"./mock-addresses\";\nimport client from \"feathers/client\";\n\nvar delay = function delay(ms) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(resolve, ms);\n  });\n};\n\nexport var getAllRestaurants = function getAllRestaurants() {\n  return client.service(\"restaurants\").find().then(function (res) {\n    return res.data;\n  });\n};\nexport var getAllDishes = function getAllDishes() {\n  return client.service(\"restaurant-dishes\").find().then(function (res) {\n    return res.data;\n  });\n};\nexport var getDishesByRestId = function getDishesByRestId(Restaurant_id) {\n  return client.service(\"restaurant-dishes\").find({\n    query: {\n      Restaurant_id: Restaurant_id\n    }\n  }).then(function (res) {\n    return res.data;\n  });\n};\nexport var getCategoriesByMenuId = function getCategoriesByMenuId(menuId) {\n  return client.service(\"menu-categories\").find({\n    query: {\n      Menu_id: menuId\n    }\n  }).then(function (res) {\n    return res.data.menu_categories;\n  });\n};\nexport var getDishCategoriesByRestId = function getDishCategoriesByRestId(Restaurant_id) {\n  return client.service(\"menu\").findOne({\n    query: {\n      Restaurant_id: Restaurant_id\n    }\n  }).then(function (menu) {\n    return menu.menu_categories;\n  }).catch(function () {\n    return [];\n  });\n};\nexport var getRestaurant = function getRestaurant(id) {\n  return client.service(\"restaurants\").findOne({\n    query: {\n      id: id\n    }\n  });\n};\n\nvar itemsSelect = function itemsSelect(items) {\n  return items.map(function (item) {\n    return {\n      value: item.label,\n      label: item.label\n    };\n  });\n};\n\nexport { dishes, restaurants };\n\nvar getItemsByParentId = function getItemsByParentId(item_id, arr) {\n  var propName = Object.keys(item_id)[0];\n  var itemId = item_id[propName];\n  if (!itemId) return [];\n  return arr.filter(function (item) {\n    if (Array.isArray(item[propName])) {\n      return item[propName].includes(itemId);\n    } else return item[propName].toString() === itemId.toString();\n  });\n};\n\nvar getSelectItemsByParentId = function getSelectItemsByParentId(item_id, arr) {\n  return getItemsByParentId(item_id, arr).map(function (item) {\n    return {\n      value: item.id,\n      label: item.name\n    };\n  });\n};\n\nvar getItemNameById = function getItemNameById(item_id, arr) {\n  var idx = arr.findIndex(function (item) {\n    return item.id === item_id;\n  });\n  return idx !== -1 ? arr[idx].name : \"\";\n};\n\nvar getItemById = function getItemById(item_id, arr) {\n  var idx = arr.findIndex(function (item) {\n    return item.id.toString() === item_id.toString();\n  });\n  return idx !== -1 ? arr[idx] : \"\";\n};\n\nexport var citiesSelectItems = itemsSelect(cities);\nexport var countriesSelectItems = itemsSelect(countries);\nexport var cuisinesSelectItems = itemsSelect(cuisines);\nexport var seatsSelectItems = seats.map(function (item, index) {\n  return {\n    value: index + 1,\n    label: item.label\n  };\n});\nexport var restaurantsSelectItems = restaurants.map(function (rest) {\n  return {\n    value: rest.id,\n    label: rest.name\n  };\n});\nexport var addressesSelectItems = addresses.map(function (addr) {\n  return {\n    value: addr.id,\n    label: addr.name\n  };\n});\nexport var dishCategoriesSelectItems = function dishCategoriesSelectItems(restaurant_id) {\n  return getSelectItemsByParentId({\n    restaurant_id: restaurant_id\n  }, dishCategories);\n};\nexport var dishesSelectItems = function dishesSelectItems(category_id) {\n  return getSelectItemsByParentId({\n    category_id: category_id\n  }, dishes);\n};\nexport var productsSelectItems = function productsSelectItems(dish_id) {\n  return getSelectItemsByParentId({\n    dish_id: dish_id\n  }, products);\n};\nexport var dishSizesSelectItems = function dishSizesSelectItems(dish_id) {\n  var idx = dishes.findIndex(function (item) {\n    return item.id === dish_id;\n  });\n  var sizes = dishes[idx].size_id;\n  return dishSizes.filter(function (item) {\n    return sizes.includes(item.id);\n  });\n};\nexport var restaurantIdToName = function restaurantIdToName(id) {\n  return getItemNameById(id, restaurants);\n};\nexport var dishCategoryIdToName = function dishCategoryIdToName(id) {\n  return getItemNameById(id, dishCategories);\n};\nexport var dishIdToName = function dishIdToName(id) {\n  return getItemNameById(id, dishes);\n};\nexport var getRestaurantById = function getRestaurantById(id) {\n  return getItemById(id, restaurants);\n};\nexport var getDishesByCategoryId = function getDishesByCategoryId(category_id) {\n  return getItemsByParentId({\n    category_id: category_id\n  }, dishes);\n};","map":{"version":3,"sources":["D:\\Studia\\React\\I3IV\\Dyplom\\src\\node_modules\\api\\index.js"],"names":["cities","countries","cuisines","dishes","dishCategories","dishSizes","restaurants","seats","products","addresses","client","delay","ms","Promise","resolve","reject","setTimeout","getAllRestaurants","service","find","then","res","data","getAllDishes","getDishesByRestId","Restaurant_id","query","getCategoriesByMenuId","menuId","Menu_id","menu_categories","getDishCategoriesByRestId","findOne","menu","catch","getRestaurant","id","itemsSelect","items","map","item","value","label","getItemsByParentId","item_id","arr","propName","Object","keys","itemId","filter","Array","isArray","includes","toString","getSelectItemsByParentId","name","getItemNameById","idx","findIndex","getItemById","citiesSelectItems","countriesSelectItems","cuisinesSelectItems","seatsSelectItems","index","restaurantsSelectItems","rest","addressesSelectItems","addr","dishCategoriesSelectItems","restaurant_id","dishesSelectItems","category_id","productsSelectItems","dish_id","dishSizesSelectItems","sizes","size_id","restaurantIdToName","dishCategoryIdToName","dishIdToName","getRestaurantById","getDishesByCategoryId"],"mappings":"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","sourcesContent":["import cities from \"./mock-cities\";\nimport countries from \"./mock-countries\";\nimport cuisines from \"./mock-cuisines\";\nimport dishes from \"./mock-dishes\";\nimport dishCategories from \"./mock-dish-categories\";\nimport dishSizes from \"./mock-dish-sizes\";\nimport restaurants from \"./mock-restaurants\";\nimport seats from \"./mock-seats\";\nimport products from \"./mock-products\";\nimport addresses from \"./mock-addresses\";\n\nimport client from \"feathers/client\";\n\nconst delay = ms => {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, ms);\n  });\n};\n\nexport const getAllRestaurants = () =>\n  client\n    .service(\"restaurants\")\n    .find()\n    .then(res => res.data);\n\nexport const getAllDishes = () =>\n  client\n    .service(\"restaurant-dishes\")\n    .find()\n    .then(res => res.data);\n\nexport const getDishesByRestId = Restaurant_id =>\n  client\n    .service(\"restaurant-dishes\")\n    .find({ query: { Restaurant_id } })\n    .then(res => res.data);\n\nexport const getCategoriesByMenuId = menuId =>\n  client\n    .service(\"menu-categories\")\n    .find({ query: { Menu_id: menuId } })\n    .then(res => res.data.menu_categories);\n\nexport const getDishCategoriesByRestId = Restaurant_id =>\n  client\n    .service(\"menu\")\n    .findOne({ query: { Restaurant_id } })\n    .then(menu => menu.menu_categories)\n    .catch(() => []);\n\nexport const getRestaurant = id =>\n  client.service(\"restaurants\").findOne({\n    query: {\n      id\n    }\n  });\n\nconst itemsSelect = items => {\n  return items.map(item => ({\n    value: item.label,\n    label: item.label\n  }));\n};\n\nexport { dishes, restaurants };\nconst getItemsByParentId = (item_id, arr) => {\n  const propName = Object.keys(item_id)[0];\n  const itemId = item_id[propName];\n  if (!itemId) return [];\n  return arr.filter(item => {\n    if (Array.isArray(item[propName])) {\n      return item[propName].includes(itemId);\n    } else return item[propName].toString() === itemId.toString();\n  });\n};\nconst getSelectItemsByParentId = (item_id, arr) =>\n  getItemsByParentId(item_id, arr).map(item => ({\n    value: item.id,\n    label: item.name\n  }));\n\nconst getItemNameById = (item_id, arr) => {\n  const idx = arr.findIndex(item => item.id === item_id);\n  return idx !== -1 ? arr[idx].name : \"\";\n};\nconst getItemById = (item_id, arr) => {\n  const idx = arr.findIndex(item => item.id.toString() === item_id.toString());\n  return idx !== -1 ? arr[idx] : \"\";\n};\n\nexport const citiesSelectItems = itemsSelect(cities);\nexport const countriesSelectItems = itemsSelect(countries);\nexport const cuisinesSelectItems = itemsSelect(cuisines);\nexport const seatsSelectItems = seats.map((item, index) => ({\n  value: index + 1,\n  label: item.label\n}));\nexport const restaurantsSelectItems = restaurants.map(rest => ({\n  value: rest.id,\n  label: rest.name\n}));\nexport const addressesSelectItems = addresses.map(addr => ({\n  value: addr.id,\n  label: addr.name\n}));\nexport const dishCategoriesSelectItems = restaurant_id =>\n  getSelectItemsByParentId({ restaurant_id }, dishCategories);\n\nexport const dishesSelectItems = category_id =>\n  getSelectItemsByParentId({ category_id }, dishes);\n\nexport const productsSelectItems = dish_id =>\n  getSelectItemsByParentId({ dish_id }, products);\n\nexport const dishSizesSelectItems = dish_id => {\n  const idx = dishes.findIndex(item => item.id === dish_id);\n  const sizes = dishes[idx].size_id;\n  return dishSizes.filter(item => sizes.includes(item.id));\n};\nexport const restaurantIdToName = id => getItemNameById(id, restaurants);\n\nexport const dishCategoryIdToName = id => getItemNameById(id, dishCategories);\n\nexport const dishIdToName = id => getItemNameById(id, dishes);\n\nexport const getRestaurantById = id => getItemById(id, restaurants);\n\nexport const getDishesByCategoryId = category_id =>\n  getItemsByParentId({ category_id }, dishes);\n"]},"metadata":{},"sourceType":"module"}